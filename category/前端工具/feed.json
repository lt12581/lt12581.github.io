{
    "version": "https://jsonfeed.org/version/1",
    "title": "羽殇の醉月 • All posts by \"前端工具\" category",
    "description": "不是只会写业务代码的前端攻城狮！",
    "home_page_url": "https://lt12581.github.io",
    "items": [
        {
            "id": "https://lt12581.github.io/posts/42207/",
            "url": "https://lt12581.github.io/posts/42207/",
            "title": "whistle网络抓包",
            "date_published": "2021-04-21T02:30:58.520Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"手机设置代理\"><a class=\"markdownIt-Anchor\" href=\"#手机设置代理\">#</a> 手机设置代理</h2>\n<p>连接好指定的 wifi 后，点击那个 wifi 里的设置，将「代理」那一项，设置为手动，然后输入 ip（电脑上的 ip）、端口号（8899）。然后就可以通过电脑上的 whistle 工具，查看手机的网页请求。</p>\n<p>注意，要保证手机和电脑在同一个网络下。</p>\n<h2 id=\"捕获和拦截https请求\"><a class=\"markdownIt-Anchor\" href=\"#捕获和拦截https请求\">#</a> 捕获和拦截 https 请求</h2>\n<p>whistle 安装证书后，可以拦截 https 请求。但是，我现在又不想拦截 https 请求了，该怎么卸载证书呢？</p>\n<p>我发现，证书无法卸载，正确的操作是：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180426_1621.png\" alt=\"\"></p>\n<p>上图中，把红框部分，去掉勾选，就不捕获 https 了。谢谢 azh 童鞋。</p>\n<p>参考链接：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIxNDc0MTc0\">Android 手机如何设置 http 代理？</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3podXNjYXQuY29tLzIwMTcvMDkvMjAvaHR0cHMtcHJveHktb24taW9zLw==\">使用 Whistle 对 iOS HTTPS 进行抓包</span></p>\n</li>\n</ul>\n<h2 id=\"移动端调试神器eruda\"><a class=\"markdownIt-Anchor\" href=\"#移动端调试神器eruda\">#</a> 移动端调试神器:eruda</h2>\n<blockquote>\n<p>手机连接代理时，如何看 console.log 的日志信息？</p>\n</blockquote>\n<blockquote>\n<p>现在，代码里有 console.log，如果是在电脑浏览器上看，可以直接在控制台查看 console.log 的内容。但是，如果手机连接代理，在手机上打开网页的话，要怎么查看 console.log 的内容呢？具体做法如下：</p>\n</blockquote>\n<p>（1）在 whistle 中，新建一个名叫 <code>Eruda H5</code>  的代理，代理中的内容是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:&#x2F;&#x2F;xxx.com htmlAppend:&#x2F;&#x2F;&#123;eruda.html&#125;</span><br></pre></td></tr></table></figure>\n<p>(2) 新建一个 values，里面的内容是：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//cdn.bootcss.com/eruda/1.4.3/eruda.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    eruda.init()</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后就 OK 了。</p>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/10161/",
            "url": "https://lt12581.github.io/posts/10161/",
            "title": "chrome浏览器",
            "date_published": "2021-04-21T02:30:58.493Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"控制台的使用\"><a class=\"markdownIt-Anchor\" href=\"#控制台的使用\">#</a> 控制台的使用</h2>\n<h3 id=\"控制台查看源码\"><a class=\"markdownIt-Anchor\" href=\"#控制台查看源码\">#</a> 控制台查看源码</h3>\n<p>控制台的 <code>Sources</code>  标签可以查看源码。按住快捷键「cmd + P」，可以根据文件名查找源码文件。</p>\n<h2 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h2>\n<h3 id=\"show-user-agent-shadow-dom\"><a class=\"markdownIt-Anchor\" href=\"#show-user-agent-shadow-dom\">#</a> show user agent shadow DOM</h3>\n<p><img data-src=\"http://img.smyhvae.com/20180206_1610.png\" alt=\"\"></p>\n<p><img data-src=\"http://img.smyhvae.com/20180206_1616.png\" alt=\"\"></p>\n<p>把上图中的红框部分打钩。</p>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/59344/",
            "url": "https://lt12581.github.io/posts/59344/",
            "title": "GitHub的使用",
            "date_published": "2021-04-21T02:30:58.486Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"github的使用\"><a class=\"markdownIt-Anchor\" href=\"#github的使用\">#</a> GitHub 的使用</h2>\n<h3 id=\"github添加wiki\"><a class=\"markdownIt-Anchor\" href=\"#github添加wiki\">#</a> GitHub 添加 wiki</h3>\n<p>参考链接：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YTMyMTZjOGYyNjVkYTQzMzMzZTZiNTQ=\">https://juejin.im/post/5a3216c8f265da43333e6b54</span></li>\n</ul>\n<h3 id=\"github项目添加-license\"><a class=\"markdownIt-Anchor\" href=\"#github项目添加-license\">#</a> GitHub 项目添加 license</h3>\n<p>参考链接：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MjQ2NjIwL2FydGljbGUvZGV0YWlscy83NzY0NzIzNA==\">https://blog.csdn.net/qq_35246620/article/details/77647234</span></li>\n</ul>\n<h3 id=\"github-引用图片的另一种方式\"><a class=\"markdownIt-Anchor\" href=\"#github-引用图片的另一种方式\">#</a> GitHub 引用图片的另一种方式</h3>\n<p>参考链接：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY3hpbnQvcC83MjAwMTY0Lmh0bWw=\">关于 markdown 文件插入图片遇到的小问题和解决办法</span></li>\n</ul>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/5251/",
            "url": "https://lt12581.github.io/posts/5251/",
            "title": "WebStorm的使用",
            "date_published": "2021-04-21T02:30:58.484Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"webstorm的简单设置\"><a class=\"markdownIt-Anchor\" href=\"#webstorm的简单设置\">#</a> WebStorm 的简单设置</h2>\n<h4 id=\"1-主题修改\"><a class=\"markdownIt-Anchor\" href=\"#1-主题修改\">#</a> 1、主题修改：</h4>\n<p>可能大家会觉得软件的界面不太好看，我们可以换一下主题。选择菜单栏 “File–settings–appearance–theme”，主题选择 Dracula：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1600.png\" alt=\"\"></p>\n<h4 id=\"2-导入第三方主题\"><a class=\"markdownIt-Anchor\" href=\"#2-导入第三方主题\">#</a> 2、导入第三方主题：</h4>\n<p>系统提供的两种主题可能都不太好看，我们可以进入网站<span class=\"exturl\" data-url=\"aHR0cDovL2NvbG9yLXRoZW1lcy5jb20v\"> http://color-themes.com/</span> 来获取第三方主题，这里推荐两个主题，大家二选一即可：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3kzc2gvSW50ZWxsaWotQ29sb3JzLVN1YmxpbWUtTW9ub2thaQ==\">Sublime</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NocmlzUk0vbWF0ZXJpYWwtdGhlbWUtamV0YnJhaW5z\">Material</span></p>\n</li>\n</ul>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1636.png\" alt=\"\"></p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1637.png\" alt=\"\"></p>\n<p>上图中，在网站<span class=\"exturl\" data-url=\"aHR0cDovL2NvbG9yLXRoZW1lcy5jb20v\"> http://color-themes.com/</span> 中将主题下载之后，是一个 jar 包。那怎么导入到 WebStorm 呢？</p>\n<p>别着急，回到 WebStorm，选择菜单栏 “File-Import Settings”，将下载好的 jar 包导入即可。</p>\n<h4 id=\"3-代码字体修改\"><a class=\"markdownIt-Anchor\" href=\"#3-代码字体修改\">#</a> 3、代码字体修改：</h4>\n<p>选择菜单栏 “File–settings–Editor–Font”：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1627.png\" alt=\"\"></p>\n<p>上图中，点击红框部分，然后弹出如下界面：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1628.png\" alt=\"\"></p>\n<p>我们在上图中修改代码的字体。</p>\n<p>修改完之后发现 WebStorm 的一些默认字体（比如侧边栏的工程目录的字体）并没有发生变化，如果想改的话，也可以改（我个人一般是不改的）。</p>\n<h4 id=\"4-关闭更新\"><a class=\"markdownIt-Anchor\" href=\"#4-关闭更新\">#</a> 4、关闭更新：</h4>\n<p>如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1646.png\" alt=\"\"></p>\n<h4 id=\"5-快捷键习惯的修改\"><a class=\"markdownIt-Anchor\" href=\"#5-快捷键习惯的修改\">#</a> 5、快捷键习惯的修改：</h4>\n<h4 id=\"7-配置代码的自动提示\"><a class=\"markdownIt-Anchor\" href=\"#7-配置代码的自动提示\">#</a> 7、配置代码的自动提示：</h4>\n<h4 id=\"14-修改文件编码为utf-8\"><a class=\"markdownIt-Anchor\" href=\"#14-修改文件编码为utf-8\">#</a> 14、修改文件编码为 UTF-8：</h4>\n<p>WebStorm 2017.3.3 版本的默认编码方式是 GBK，我们还是统一设置为 UTF-8 吧，不要坑队友哦：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180124_1856.png\" alt=\"\"></p>\n<h3 id=\"新建一个空的项目\"><a class=\"markdownIt-Anchor\" href=\"#新建一个空的项目\">#</a> 新建一个空的项目</h3>\n<p>配置完成后，可以开始新建一个项目文件夹（站点），项目通常包含如下内容：</p>\n<ul>\n<li>\n<p>首页：index.html</p>\n</li>\n<li>\n<p>样式：css 文件夹</p>\n<ul>\n<li>index.css</li>\n<li>相同样式：全局样式、公共样式。起名为：base.css（基本样式）或者 global.css (全局样式)</li>\n</ul>\n</li>\n<li>\n<p>图片：images 文件夹、文件</p>\n</li>\n<li>\n<p>特效：js 文件夹、js 文件</p>\n</li>\n</ul>\n<p><strong>步骤如下：</strong></p>\n<p>（1）新建一个空的项目：<br>\n<img data-src=\"http://img.smyhvae.com/20180118_1720.png\" alt=\"\"></p>\n<p>（2）然后新建一个 html 文件：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1602.png\" alt=\"\"></p>\n<p>（3）新建一个空的文件夹，命名为 <code>css</code> ：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1725.png\" alt=\"\"></p>\n<p>然后在这个 css 文件夹中，新建样式表：（比如 index.css\\base.css）</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1730.png\" alt=\"\"></p>\n<p>（4）最后新建一个 images 文件夹，用于存放土片。这样的话，一个基本的项目结构就搭建好了：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1733.png\" alt=\"\"></p>\n<p>接下来，开始运用起你们的前端知识吧。</p>\n<p>（5）如果要新建 JS 文件的话，操作如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180124_1859.png\" alt=\"\"></p>\n<h2 id=\"使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#使用技巧\">#</a> 使用技巧</h2>\n<h4 id=\"多光标编辑\"><a class=\"markdownIt-Anchor\" href=\"#多光标编辑\">#</a> 多光标编辑</h4>\n<p>我们可以按住鼠标不松手，选中多个光标，然后同时编辑：</p>\n<h4 id=\"随时在浏览器中看代码效果\"><a class=\"markdownIt-Anchor\" href=\"#随时在浏览器中看代码效果\">#</a> 随时在浏览器中看代码效果</h4>\n<p>20180118_1658.png</p>\n<p>如上图所示，我们可以点击右上角的浏览器图标，在各个浏览器中看效果。</p>\n<h4 id=\"实时查看颜色\"><a class=\"markdownIt-Anchor\" href=\"#实时查看颜色\">#</a> 实时查看颜色</h4>\n<p>写代码时如果想输入颜色，会自动提示颜色的预览。</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1702.png\" alt=\"\"></p>\n<p>点击最左侧的颜色预览，还能弹出调色板：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1710.gif\" alt=\"\"></p>\n<h2 id=\"代码的自动补齐\"><a class=\"markdownIt-Anchor\" href=\"#代码的自动补齐\">#</a> 代码的自动补齐</h2>\n<p>（1）在 html 文档中，输入 <code>div*10</code> ，按 tab 键后，弹出的效果如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>（2）在 html 文档中，输入如下部分：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.search-logo+.search-input+.search-car+.search-moreA</span><br></pre></td></tr></table></figure>\n<p>按 tab 键后，弹出的效果如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-logo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-input\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-car\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-moreA\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>你看，京东的搜索框就包含了这几个 div：</p>\n<p>20180122_1045.png</p>\n<p>（3）方法的注释：</p>\n<p>方法写完之后（注意，一定要先写完整），我们在方法的前面输入 <code>/**</code> ，然后回车，会发现，注释的格式会自动补齐。</p>\n<p>比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 功能：给定元素查找他的第一个元素子节点，并返回</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"variable\">ele</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns <span class=\"type\">&#123;Element|*|Node&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getFirstNode</span>(<span class=\"params\">ele</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> node = ele.firstElementChild || ele.firstChild;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用快捷键\"><a class=\"markdownIt-Anchor\" href=\"#常用快捷键\">#</a> 常用快捷键</h2>\n<h4 id=\"标签环绕\"><a class=\"markdownIt-Anchor\" href=\"#标签环绕\">#</a> 标签环绕</h4>\n<p>输入一段字符后，按住 <code>Ctrl + Alt + T</code> ，可以用标签将这段字符环绕：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180118_1719.gif\" alt=\"\"></p>\n<h4 id=\"选中正行中的文本\"><a class=\"markdownIt-Anchor\" href=\"#选中正行中的文本\">#</a> 选中正行中的文本</h4>\n<p>比如下面这行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text-align: center;  &#x2F;*让 li 里面的文本水平方向居中*&#x2F;</span><br></pre></td></tr></table></figure>\n<p>如果直接按 【ctrl+C】的话，复制的是整行的内容，把前面的空格也包含进去了。如果不想复制空格，有另外一个办法：将光标放在行尾，然后按住【shift+home】，就能选中你想要的内容了。</p>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/1860/",
            "url": "https://lt12581.github.io/posts/1860/",
            "title": "VS Code的使用积累",
            "date_published": "2021-04-21T02:30:58.468Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"常见配置\"><a class=\"markdownIt-Anchor\" href=\"#常见配置\">#</a> 常见配置</h2>\n<p><strong>自动保存</strong>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;files.autoSave&quot;: &quot;onFocusChange&quot;</span><br></pre></td></tr></table></figure>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1dlc3RMb25seS9hcnRpY2xlL2RldGFpbHMvNzgwNDgwNDk=\">https://blog.csdn.net/WestLonly/article/details/78048049</span></p>\n<p><strong>在新的窗口中打开文件</strong>：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"workbench.editor.enablePreview\": false,</span><br></pre></td></tr></table></figure>\n<h2 id=\"常见操作\"><a class=\"markdownIt-Anchor\" href=\"#常见操作\">#</a> 常见操作</h2>\n<h3 id=\"如何查看代码结构\"><a class=\"markdownIt-Anchor\" href=\"#如何查看代码结构\">#</a> 如何查看代码结构</h3>\n<ul>\n<li>\n<p>方法一：「Cmd + Shift + O」</p>\n</li>\n<li>\n<p>方法二：安装插件 <code>Code Outline</code></p>\n</li>\n</ul>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI2NDA0NTA5NA==\">https://www.zhihu.com/question/264045094</span></p>\n<h3 id=\"在本地开启服务器\"><a class=\"markdownIt-Anchor\" href=\"#在本地开启服务器\">#</a> 在本地开启服务器</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">npm install -g live-server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">live-server</span><br></pre></td></tr></table></figure>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS8xemhrL3AvNTY5OTM3OS5odG1s\">Visual Studio Code + live-server 编辑和浏览 HTML 网页</span></p>\n<h2 id=\"常用插件\"><a class=\"markdownIt-Anchor\" href=\"#常用插件\">#</a> 常用插件</h2>\n<p>方式一：打开 VS Code，左侧有五个按钮，点击最下方的按钮，然后就可以开始安装相应的插件了。</p>\n<p>方式二：在 vscode 中输入快捷键「ctrl+shift+P」，弹出指令窗口，输入 <code>extension:install</code> ，回车，左侧即打开扩展安装的界面。</p>\n<h3 id=\"sftp文件传输\"><a class=\"markdownIt-Anchor\" href=\"#sftp文件传输\">#</a> sftp：文件传输</h3>\n<p>输入快捷键「ctrl+shift+P」，弹出指令窗口，输入 <code>sftp:config</code> ，回车，当前工作工程的 <code>.vscode</code>  文件夹下就会自动生成一个 <code>sftp.json</code>  文件，我们需要在这个文件里配置的是：</p>\n<ul>\n<li>\n<p><code>host</code> ：服务器的 IP 地址</p>\n</li>\n<li>\n<p><code>username</code> ：工作站自己的用户名</p>\n</li>\n<li>\n<p><code>privateKeyPath</code> ：存放在本地的已配置好的用于登录工作站的密钥文件（也可以是 ppk 文件）</p>\n</li>\n<li>\n<p><code>remotePath</code> ：工作站上与本地工程同步的文件夹路径，需要和本地工程文件根目录同名，且在使用 sftp 上传文件之前，要手动在工作站上 mkdir 生成这个根目录</p>\n</li>\n<li>\n<p><code>ignore</code> ：指定在使用 sftp: sync to remote 的时候忽略的文件及文件夹，注意每一行后面有逗号，最后一行没有逗号</p>\n</li>\n</ul>\n<p>举例如下：(注意，其中的注释不能保留)</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"host\"</span>: <span class=\"string\">\"\"</span>,     <span class=\"comment\">//服务器ip</span></span><br><span class=\"line\">    <span class=\"attr\">\"port\"</span>: <span class=\"number\">22</span>,     <span class=\"comment\">//端口，sftp模式是22</span></span><br><span class=\"line\">    <span class=\"attr\">\"username\"</span>: <span class=\"string\">\"\"</span>, <span class=\"comment\">//用户名</span></span><br><span class=\"line\">    <span class=\"attr\">\"password\"</span>: <span class=\"string\">\"\"</span>, <span class=\"comment\">//密码</span></span><br><span class=\"line\">    <span class=\"attr\">\"protocol\"</span>: <span class=\"string\">\"sftp\"</span>, <span class=\"comment\">//模式</span></span><br><span class=\"line\">    <span class=\"attr\">\"agent\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"privateKeyPath\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"passphrase\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"passive\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"interactiveAuth\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"remotePath\"</span>: <span class=\"string\">\"/root/node/build/\"</span>,  <span class=\"comment\">//服务器上的文件地址</span></span><br><span class=\"line\">    <span class=\"attr\">\"context\"</span>: <span class=\"string\">\"./server/build\"</span>,        <span class=\"comment\">//本地的文件地址</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">\"uploadOnSave\"</span>: <span class=\"literal\">true</span>,   <span class=\"comment\">//监听保存并上传</span></span><br><span class=\"line\">    <span class=\"attr\">\"syncMode\"</span>: <span class=\"string\">\"update\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"watcher\"</span>: &#123;            <span class=\"comment\">//监听外部文件</span></span><br><span class=\"line\">        <span class=\"attr\">\"files\"</span>: <span class=\"literal\">false</span>,     <span class=\"comment\">//外部文件的绝对路径</span></span><br><span class=\"line\">        <span class=\"attr\">\"autoUpload\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"autoDelete\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"ignore\"</span>: [             <span class=\"comment\">//忽略项</span></span><br><span class=\"line\">        <span class=\"string\">\"**/.vscode/**\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"**/.git/**\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"**/.DS_Store\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"sass-formatter\"><a class=\"markdownIt-Anchor\" href=\"#sass-formatter\">#</a> Sass Formatter</h3>\n<p>Sass 文件格式化。</p>\n<h3 id=\"code-outline显示代码结构\"><a class=\"markdownIt-Anchor\" href=\"#code-outline显示代码结构\">#</a> Code Outline：显示代码结构</h3>\n<p>安装好插件「Code Outline」后，可以在左侧的资源管理器中，显示当前文件的代码结构：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180420_0925.png\" alt=\"\"></p>\n<p>参考链接：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzUwMjczNDUw\">https://www.zhihu.com/question/50273450</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2l0b3BpYy5vcmcvdnNjb2RlLmh0bWw=\">http://itopic.org/vscode.html</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZhckhhcnJpZS92YXJoYXJyaWUuZ2l0aHViLmlvL2lzc3Vlcy8xMA==\">https://github.com/varHarrie/varharrie.github.io/issues/10</span></p>\n</li>\n</ul>\n<h3 id=\"vscode-fileheader添加顶部注释模板签名\"><a class=\"markdownIt-Anchor\" href=\"#vscode-fileheader添加顶部注释模板签名\">#</a> vscode-fileheader：添加顶部注释模板 (签名)</h3>\n<p>（1）安装插件 vscode -fileheader，并重启。</p>\n<p>（2）在首选项 -》设置 -》中搜索 fileheader，找到头部模板修改。</p>\n<p>默认的快捷键是：「Ctrl + option + I」。</p>\n<p>参考链接：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzYyMzg1NjQ3\">https://www.zhihu.com/question/62385647</span></li>\n</ul>\n<h3 id=\"express\"><a class=\"markdownIt-Anchor\" href=\"#express\">#</a> Express</h3>\n<p>在本地开启 Node 服务器：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180611_2230.png\" alt=\"\"></p>\n<p>然后在浏览器的地址栏输入 <code>http://localhost/</code>  + 文件的相对路径，就可以通过服务器的形式打开这个文件。</p>\n<h3 id=\"copy-relative-path\"><a class=\"markdownIt-Anchor\" href=\"#copy-relative-path\">#</a> Copy Relative Path</h3>\n<blockquote>\n<p>这个插件很有用，使用频率很高。</p>\n</blockquote>\n<p>复制文件的相对路径：（相对于根路径而言）</p>\n<p><img data-src=\"http://img.smyhvae.com/20180611_2235.png\" alt=\"\"></p>\n<h3 id=\"open-in-browser\"><a class=\"markdownIt-Anchor\" href=\"#open-in-browser\">#</a> open in browser</h3>\n<p>在浏览器中打开。</p>\n<h3 id=\"auto-rename-tag\"><a class=\"markdownIt-Anchor\" href=\"#auto-rename-tag\">#</a> Auto Rename Tag</h3>\n<p>适用于 JSX、Vue、HTML。在修改标签名时，能在你修改开始（结束）标签的时候修改对应的结束（开始）标签，帮你减少 50% 的击键。</p>\n<p>###Project Manager</p>\n<p>项目管理，让我们方便的在命令面板中切换项目文件夹，当然，你也可以直接打开包含多个项目的父级文件夹，但这样可能会让 VSCode 变慢。</p>\n<h3 id=\"highlight-icemode选中相同的代码时让高亮显示更加明显荐\"><a class=\"markdownIt-Anchor\" href=\"#highlight-icemode选中相同的代码时让高亮显示更加明显荐\">#</a> highlight-icemode：选中相同的代码时，让高亮显示更加明显【荐】</h3>\n<p>VSCode 自带的高亮显示，实在是不够显眼。用插件支持一下吧。</p>\n<p>所用了这个插件之后，VS Code 自带的高亮就可以关掉了：</p>\n<p>在用户设置里添加 <code>&quot;editor.selectionHighlight&quot;: false</code>  即可。</p>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbG1lcl9rYWkvYXJ0aWNsZS9kZXRhaWxzLzc5NTQ4MTY0\">vscode 选中后相同内容高亮插件推荐</span></p>\n<h3 id=\"highlight-words全局高亮跨文件多色彩\"><a class=\"markdownIt-Anchor\" href=\"#highlight-words全局高亮跨文件多色彩\">#</a> highlight-words：全局高亮（跨文件多色彩）</h3>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMTE2Mzc5Mw==\">Visual Studio Code 全局高亮着色插件 (跨文件多色彩) 经验纪要</span></p>\n<h3 id=\"color-exchange颜色格式转换荐\"><a class=\"markdownIt-Anchor\" href=\"#color-exchange颜色格式转换荐\">#</a> color-exchange：颜色格式转换【荐】</h3>\n<p>安装完插件后，在 css 中输入颜色，然后按 <code>cmd + .</code> ，就能进行颜色的格式转换。</p>\n<p>20181013_1450.png</p>\n<p>我在写这一段时，安装的人还不多，赶紧上车。</p>\n<h2 id=\"vue-相关的插件\"><a class=\"markdownIt-Anchor\" href=\"#vue-相关的插件\">#</a> Vue 相关的插件</h2>\n<h3 id=\"veturvue-文件的基本语法高亮\"><a class=\"markdownIt-Anchor\" href=\"#veturvue-文件的基本语法高亮\">#</a> vetur：vue 文件的基本语法高亮</h3>\n<p>安装完 vetur 后还需要加上这样一段配置下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;emmet.syntaxProfiles&quot;: &#123;</span><br><span class=\"line\">  &quot;vue-html&quot;: &quot;html&quot;,</span><br><span class=\"line\">  &quot;vue&quot;: &quot;html&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考链接：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xhcmVuY2VwLmNvbS8yMDE3LzAzLzE4L2VkaXQtdnVlLWZpbGUtdmlhLXZzY29kZS8=\">https://www.clarencep.com/2017/03/18/edit-vue-file-via-vscode/</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZhckhhcnJpZS92YXJoYXJyaWUuZ2l0aHViLmlvL2lzc3Vlcy8xMA==\">https://github.com/varHarrie/varharrie.github.io/issues/10</span></p>\n</li>\n</ul>\n<h3 id=\"参考链接\"><a class=\"markdownIt-Anchor\" href=\"#参考链接\">#</a> 参考链接</h3>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wNzI0OTIxMjg1ZDQ=\">https://www.jianshu.com/p/0724921285d4</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQW1vc0xlZTk0L3AvODMzODAxMy5odG1s\">https://www.cnblogs.com/AmosLee94/p/8338013.html</span></p>\n</li>\n</ul>\n<h2 id=\"常用快捷键\"><a class=\"markdownIt-Anchor\" href=\"#常用快捷键\">#</a> 常用快捷键</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Shift + Alt + F</td>\n<td style=\"text-align:left\">Shift + option + F</td>\n<td style=\"text-align:left\">代码格式化</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Ctrl + Shift + N</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">在当前行上面增加一行并跳至该行</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Ctrl + Shift + D</strong></td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">复制当前行到下一行</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"如何同时打开多个窗口\"><a class=\"markdownIt-Anchor\" href=\"#如何同时打开多个窗口\">#</a> 如何同时打开多个窗口</h3>\n<h2 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h2>\n<p>问题 1</p>\n<p>解决；You can kill the Microsoft.VSCode.Cpp.IntelliSense.Msvc process to save the file successfully. 也就是 IntelliSense 这个进程。</p>\n<h2 id=\"参考链接-2\"><a class=\"markdownIt-Anchor\" href=\"#参考链接-2\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMDk3NjU4NA==\">能让你开发效率翻倍的 VSCode 插件配置（上）</span></li>\n</ul>\n<h3 id=\"某网友的vs-code-插件截图\"><a class=\"markdownIt-Anchor\" href=\"#某网友的vs-code-插件截图\">#</a> 某网友的 VS Code 插件截图</h3>\n<p><img data-src=\"http://img.smyhvae.com/20180611_2255.png\" alt=\"\"></p>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/47531/",
            "url": "https://lt12581.github.io/posts/47531/",
            "title": "Mac安装和配置iTerm2",
            "date_published": "2021-04-21T02:30:58.463Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"参考链接\"><a class=\"markdownIt-Anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Npcml1czEwMjQvaXRlcm0yLXdpdGgtb2gtbXktenNo\">iTerm2 + Oh My Zsh 打造舒适终端体验</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1YW5ncGluODE1L2FydGljbGUvZGV0YWlscy8xMDU2MDYxMzU=\">安装 oh my zsh 失败：curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</span></p>\n</li>\n</ul>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/53547/",
            "url": "https://lt12581.github.io/posts/53547/",
            "title": "Git的使用",
            "date_published": "2021-04-21T02:30:58.437Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"常见操作\"><a class=\"markdownIt-Anchor\" href=\"#常见操作\">#</a> 常见操作</h2>\n<h3 id=\"全局配置用户信息\"><a class=\"markdownIt-Anchor\" href=\"#全局配置用户信息\">#</a> 全局配置用户信息</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;smyhvae&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">git config --global user.email &quot;smyhvae@163.com&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"分支的合并\"><a class=\"markdownIt-Anchor\" href=\"#分支的合并\">#</a> 分支的合并</h2>\n<h3 id=\"场景基于master分支的代码开发一个新的特性\"><a class=\"markdownIt-Anchor\" href=\"#场景基于master分支的代码开发一个新的特性\">#</a> 场景：基于 master 分支的代码，开发一个新的特性</h3>\n<p>如果你直接在 master 分支上开发这个新特性，是不好的，万一你在开发 <code>特性1</code>  的时候，领导突然又要叫你去开发 <code>特性2</code> ，就不好处理了。难道开发的两个特性都提交到 master？一会儿提交特性 1 的 commit，一会儿提交特性 2 的 commit？这会导致 commit 记录很混乱。</p>\n<p>所以，我给你的建议做法是：给每个特性都单独建一个的新的分支。</p>\n<p>比如说，我专门给 <code>特性1</code>  建一个分支 <code>feature_item_recommend</code> 。具体做法如下：</p>\n<p>（1）基于 master 分支，创建一个新的分支，起名为 <code>feature_item_recommend</code> ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b feature_item_recommend</span><br><span class=\"line\"></span><br><span class=\"line\">Switched to a new branch &#39;feature_item_recommend&#39;</span><br></pre></td></tr></table></figure>\n<p>上面这行命令，相当于：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch feature_item_recommend    // 创建新的分支</span><br><span class=\"line\"></span><br><span class=\"line\">$ git checkout feature_item_recommend  //切换到新的分支</span><br></pre></td></tr></table></figure>\n<p>（2）在新的分支 <code>feature_item_recommend</code>  上，完成开发工作，并 commit 、push。</p>\n<p>（3）将分支 <code>feature_item_recommend</code>  上的开发进度<strong>合并</strong>到 master 分支：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master  //切换到master分支</span><br><span class=\"line\"></span><br><span class=\"line\">$ git merge feature_item_recommend    //将分支 feature_item_recommend 的开发进度合并到 master 分支</span><br></pre></td></tr></table></figure>\n<p>合并之后， <code>master</code>  分支和 <code>feature_item_recommend</code>  分支会指向同一个位置。</p>\n<p>（3）删除分支 <code>feature_item_recommend</code> ：</p>\n<blockquote>\n<p>既然 特性 1 开发完了，也放心地提交到 master 了，那我们就可以将这个分支删除了。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d feature_item_recommend</span><br></pre></td></tr></table></figure>\n<p>注意，我们当前是处于 <code>master</code>  分支的位置，来删除 <code>feature_item_recommend</code>  分支。如果当前是处于 <code>feature_item_recommend</code>  分支，是没办法删除它自己的。</p>\n<p>同理，当我转身去开发 <code>特性2</code>  的时候，也是采用同样的步骤。</p>\n<h3 id=\"合并分支时如果存在分叉\"><a class=\"markdownIt-Anchor\" href=\"#合并分支时如果存在分叉\">#</a> 合并分支时，如果存在分叉</h3>\n<p><img data-src=\"http://img.smyhvae.com/20180610_1650.png\" alt=\"\"></p>\n<p>比如说上面这张图中，最早的时候，master 分支是位于 <code>C2</code>  节点。我基于 <code>C2</code>  节点，new 出一个新的分支 <code>iss53</code> ，我在 <code>iss53</code>  上提交了好几个 commit。</p>\n<p>现在，我准备把 <code>iss53</code>  上的几个 commit 合并到 master 上，此时发现，master 分支已经前进到 C4 了。那该怎么合并呢？</p>\n<p>合并的命令仍然是：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout master</span><br><span class=\"line\"></span><br><span class=\"line\">$ git merge iss53</span><br></pre></td></tr></table></figure>\n<p><strong>解释</strong>：</p>\n<p>这次合并的实现，并不同于简单的并入方式。这一次，我的开发历史是从更早的地方开始分叉的。</p>\n<p>由于当前 master 分支所指向的 commit (C4) 并非想要并入分支（iss53）的直接祖先，Git 不得不进行一些处理。就此例而言，Git 会用两个分支的末端（C4 和 C5）和它们的共同祖先（C2）进行一次简单的三方合并计算。</p>\n<p>Git 没有简单地把分支指针右移，而是对三方合并的结果作一新的快照，并自动创建一个指向它的 commit（C6）（如下图所示）。我们把这个特殊的 commit 称作合并提交（mergecommit），因为它的祖先不止一个。</p>\n<p>值得一提的是 Git 可以自己裁决哪个共同祖先才是最佳合并基础；这和 CVS 或 Subversion（1.5 以后的版本）不同，它们需要开发者手工指定合并基础。所以此特性让 Git 的合并操作比其他系统都要简单不少。</p>\n<p><img data-src=\"http://img.smyhvae.com/20180610_1710.png\" alt=\"\"></p>\n<h3 id=\"解决合并时发生的冲突\"><a class=\"markdownIt-Anchor\" href=\"#解决合并时发生的冲突\">#</a> 解决合并时发生的冲突</h3>\n<p><img data-src=\"http://img.smyhvae.com/20180610_1740.png\" alt=\"\"></p>\n<p>如果 feature1 和 feature2 修改的是同一个文件中<strong>代码的同一个位置</strong>，那么，把 feature1 合并到 feature2 时，就会产生冲突。这个冲突需要人工解决。步骤如下：</p>\n<p>（1）手动修改文件：手动修改冲突的那个文件，决定到底要用哪个分支的代码。</p>\n<p>（2）git add：解决好冲突后，输入 <code>git status</code> ，会提示 <code>Unmerged paths</code> 。这个时候，输入 <code>git add</code>  即可，表示：<strong>修改冲突成功，加入暂存区</strong>。</p>\n<p>（3）git commit 提交。</p>\n<p>然后，我们可以继续把 feature1 分支合并到 master 分支，最后删除 feature1、feature2。</p>\n<p><strong>注意</strong>：两个分支的同一个文件的不同地方合并时，git 会自动合并，不会产生冲突。</p>\n<p>比如分支 feture1 对 index.html 原来的第二行之前加入了一段代码。<br>\n分支 feature2 对 index.html 在原来的最后一行的后面加入了一段代码。<br>\n这个时候在对两个分支合并，git 不会产生冲突，因为两个分支是修改同一文件的不同位置。<br>\ngit 自动合并成功。不管是 git 自动合并成功，还是在人工解决冲突下合并成功，提交之前，都要对代码进行测试。</p>\n<h2 id=\"日常操作积累\"><a class=\"markdownIt-Anchor\" href=\"#日常操作积累\">#</a> 日常操作积累</h2>\n<h3 id=\"修改密码曲线救国\"><a class=\"markdownIt-Anchor\" href=\"#修改密码曲线救国\">#</a> 修改密码（曲线救国）</h3>\n<blockquote>\n<p>网上查了很久，没找到答案。最终，在 cld 童鞋的提示下，采取如下方式进行曲线救国。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置当前仓库的用户名为空</span></span><br><span class=\"line\">git config  user.name <span class=\"string\">\"\"</span></span><br></pre></td></tr></table></figure>\n<p>然后，当我们再输入 <code>git pull</code>  等命令行时，就会被要求重新输入<em>新的</em>账号密码。此时，密码就可以修改成功了。最后，我们还要输入如下命令，还原当前仓库的用户名：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.name &quot;smyhvae&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改已经push的某次commit的作者信息\"><a class=\"markdownIt-Anchor\" href=\"#修改已经push的某次commit的作者信息\">#</a> 修改已经 push 的某次 commit 的作者信息</h3>\n<p>已经 push 的记录，如果要修改作者信息的话，只能 通过–force 命令。我反正是查了很久，但最终还是不敢用公司的仓库尝试。</p>\n<p>参考链接：</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3EvMTAxMDAwMDAwNjk5OTg2MQ==\">git 修改已提交的某一次的邮箱和用户信息</span></li>\n</ul>\n<p>看最后一条答案。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JhdXJpbmUuZ2l0aHViLmlvLzIwMTUvMDgvMjIvZ2l0X3VwZGF0ZV9hdXRob3IuaHRtbA==\">修改 git repo 历史提交的 author</span></li>\n</ul>\n<h3 id=\"将-branch1的某个commit1合并到branch2当中\"><a class=\"markdownIt-Anchor\" href=\"#将-branch1的某个commit1合并到branch2当中\">#</a> 将  <code>branch1</code>  的某个 <code>commit1</code>  合并到 <code>branch2</code>  当中</h3>\n<p>切换到 branch2 中，然后执行如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick commit1</span><br></pre></td></tr></table></figure>\n<h3 id=\"20190118-修改github已提交的用户名和邮箱\"><a class=\"markdownIt-Anchor\" href=\"#20190118-修改github已提交的用户名和邮箱\">#</a> 20190118 - 修改 GitHub 已提交的用户名和邮箱</h3>\n<p>参考链接：（亲测有效）</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xMzUyNjIz\">修改 Git 全部 Commit 提交记录的用户名 Name 和邮箱 Email</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1c3Vmb2x1OS9hcnRpY2xlL2RldGFpbHMvNTM3MDYyNjk=\">Mac 运行 sh 文件，也就是传说中的 shell 脚本</span></p>\n</li>\n</ul>\n<p>在执行 <code>./email.sh</code>  后，如果出现 <code>permission denied</code>  的错误，可以先执行 <code>chmod 777 email.sh</code> ，修改文件的权限。</p>\n<h3 id=\"20200520-将git-项目迁移到另一个仓库\"><a class=\"markdownIt-Anchor\" href=\"#20200520-将git-项目迁移到另一个仓库\">#</a> 20200520 - 将 Git 项目迁移到另一个仓库</h3>\n<p>我们假设旧仓库的项目名称叫 <code>old-repository</code> ，新仓库的项目名称叫 <code>new-repository</code> 。操作如下：</p>\n<p>（1）创建旧仓库的裸克隆：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --bare https://github.com/exampleuser/old-repository.git</span><br></pre></td></tr></table></figure>\n<p>执行上述命令后，会在本地生成一个名叫  <code>old-repository.git</code>  的文件夹。</p>\n<p>（2）迁移到新仓库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> old-repository.git</span><br><span class=\"line\"></span><br><span class=\"line\">git push --mirror https://github.com/exampleuser/new-repository.git</span><br></pre></td></tr></table></figure>\n<p>这样的话，项目就已经迁移到新仓库了。</p>\n<p>注意，我们<strong>不需要</strong>手动新建一个空的新仓库，当我们执行上述命令之后，新仓库就已经自动创建好了。</p>\n<p>参考链接：</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vY24vZ2l0aHViL2NyZWF0aW5nLWNsb25pbmctYW5kLWFyY2hpdmluZy1yZXBvc2l0b3JpZXMvZHVwbGljYXRpbmctYS1yZXBvc2l0b3J5\">复制仓库</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2Vsb3ZlLmluZm8vMjAxNi8xMi8wNC9HaXQtJUU2JTlDJUFDJUU1JTlDJUIwJUU0JUJCJTkzJUU1JUJBJTkzJUU1JTkyJThDJUU4JUEzJUI4JUU0JUJCJTkzJUU1JUJBJTkzLw==\">Git 本地仓库和裸仓库</span></p>\n</li>\n</ul>\n<h2 id=\"git客户端推荐\"><a class=\"markdownIt-Anchor\" href=\"#git客户端推荐\">#</a> git 客户端推荐</h2>\n<p>市面上的 Git 客户端我基本都用过了，我最推荐的一款 Git 客户端是：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0LXRvd2VyLmNvbQ==\">Tower</span> 或者 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtZm9yay5jb20=\">Fork</span>。</p>\n<ul>\n<li>GitUp：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXR1cC5jby8=\">https://gitup.co/</span></li>\n</ul>\n<p>20180623 时，网上看了下 Git 客户端的推荐排名：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180623_1210.png\" alt=\"\"></p>\n<p><strong>SmartGit</strong>：</p>\n<p>商业用途收费， 个人用户免费：</p>\n<p><img data-src=\"http://img.smyhvae.com/20180623_1305.png\" alt=\"\"></p>\n<h2 id=\"推荐书籍\"><a class=\"markdownIt-Anchor\" href=\"#推荐书籍\">#</a> 推荐书籍</h2>\n<ul>\n<li>《pro.git 中文版》</li>\n</ul>\n<h2 id=\"推荐连接\"><a class=\"markdownIt-Anchor\" href=\"#推荐连接\">#</a> 推荐连接</h2>\n<h3 id=\"2018-06\"><a class=\"markdownIt-Anchor\" href=\"#2018-06\">#</a> 2018-06</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZ2lxbmdwZWk1NTcvcC82MDU2NjI0Lmh0bWw=\">聊下 git pull --rebase</span></li>\n</ul>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        },
        {
            "id": "https://lt12581.github.io/posts/26789/",
            "url": "https://lt12581.github.io/posts/26789/",
            "title": "VS Code的使用",
            "date_published": "2021-04-21T02:30:58.432Z",
            "content_html": "<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>VS Code 软件实在是太酷、太好用了，越来越多的新生代互联网青年正在使用它。</p>\n<p>前端男神<strong>尤雨溪</strong>大大这样评价 VS Code：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200619_0133.png\" alt=\"\"></p>\n<p>有一点你可能会感到惊讶：VS Code 这款软件本身，是用 JavaScript 语言编写的（具体请自行查阅基于 JS 的 PC 客户端开发框架  <code>Electron</code> ）。Jeff Atwood 在 2007 年提出了著名的 Atwood 定律：</p>\n<blockquote>\n<p><strong>任何能够用 JavaScript 实现的应用系统，最终都必将用 JavaScript 实现</strong>。</p>\n</blockquote>\n<p>Jeff Atwood 这个人是谁不重要（他是 Stack Overflow 网站的联合创始人），重要的是这条定律。</p>\n<p>前端目前是处在春秋战国时代，各路英雄豪杰成为后浪，各种框架工具层出不穷，VS Code 软件无疑是大前端时代最骄傲的工具。</p>\n<p>如果你是做前端开发（JavaScript 编程语言为主），则完全可以将 VS Code 作为「<strong>主力开发工具</strong>」。这款软件是为前端同学量身定制的。</p>\n<p>如果你是做其他语言方向的开发，并且不需要太复杂的集成开发环境，那么，你可以把 VS Code 作为「<strong>代码编辑器</strong>」来使用，纵享丝滑。</p>\n<p>甚至是一些写文档、写作的同学，也经常把 VS Code 作为 markdown <strong>写作工具</strong>，毫无违和感。</p>\n<p>退而求其次，即便你不属于以上任何范畴，你还可以把 VS Code 当作最简单的<strong>文本编辑器</strong>来使用，完胜 Windows 系统自带的记事本。</p>\n<p>写下这篇文章，是顺势而为。</p>\n<h2 id=\"一-vs-code-的介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-vs-code-的介绍\">#</a> 一、VS Code 的介绍</h2>\n<p>VS Code 的全称是 Visual Studio Code，是一款开源的、免费的、跨平台的、高性能的、轻量级的代码编辑器。它在性能、语言支持、开源社区方面，都做得很不错。</p>\n<p>微软有两种软件：一种是 VS Code，一种是其他软件。</p>\n<h3 id=\"ide-与-编辑器的对比\"><a class=\"markdownIt-Anchor\" href=\"#ide-与-编辑器的对比\">#</a> IDE 与 编辑器的对比</h3>\n<p>IDE 和编辑器是有区别的：</p>\n<ul>\n<li>\n<p><strong>IDE</strong>（Integrated Development Environment，集成开发环境）：对代码有较好的智能提示和相互跳转，同时侧重于工程项目，对项目的开发、调试工作有较好的图像化界面的支持，因此比较笨重。比如 Eclipse 的定位就是 IDE。</p>\n</li>\n<li>\n<p><strong>编辑器</strong>：要相对轻量许多，侧重于文本的编辑。比如 Sublime Text 的定位就是编辑器。再比如 Windows 系统自带的「记事本」就是最简单的编辑器。</p>\n</li>\n</ul>\n<p>需要注意的是，VS Code 的定位是<strong>编辑器</strong>，而非 IDE ，但 VS Code 又比一般的编辑器的功能要丰富许多。可以这样理解：VS Code 的体量是介于编辑器和 IDE 之间。</p>\n<h3 id=\"vs-code-的特点\"><a class=\"markdownIt-Anchor\" href=\"#vs-code-的特点\">#</a> VS Code 的特点</h3>\n<ul>\n<li>\n<p>VS Code 的使命，是让开发者在编辑器里拥有 IDE 那样的开发体验，比如代码的智能提示、语法检查、图形化的调试工具、插件扩展、版本管理等。</p>\n</li>\n<li>\n<p>跨平台支持 MacOS、Windows 和 Linux 等多个平台。</p>\n</li>\n<li>\n<p>VS Code 的源代码以 MIT 协议开源。</p>\n</li>\n<li>\n<p>支持第三方插件，功能强大，生态系统完善。</p>\n</li>\n<li>\n<p>VS Code 自带了 JavaScript、TypeScript 和 Node.js 的支持。也就是说，你在书写 JS 和 TS 时，是自带智能提示的。当然，其他的语言，你可以安装相应的<strong>扩展包</strong>插件，也会有智能提示。</p>\n</li>\n</ul>\n<h3 id=\"前端利器之争-vs-code-与-webstorm\"><a class=\"markdownIt-Anchor\" href=\"#前端利器之争-vs-code-与-webstorm\">#</a> 前端利器之争： VS Code 与 WebStorm</h3>\n<p>前端小白最喜欢问的一个问题是：哪个编辑器 / IDE 好用？是 VS Code 还是 WebStorm （WebStorm 其实是 IntelliJ IDEA 的定制版）？我来做个对比：</p>\n<ul>\n<li>\n<p><strong>哪个更酷</strong>：显然 VS Code 更酷。</p>\n</li>\n<li>\n<p><strong>内存占用情况</strong>：根据我的观察，VS Code 是很占内存的（尤其是当你打开多个窗口的时候），但如果你的内存条够用，使用起来是不会有任何卡顿的感觉的。相比之下，IntelliJ IDEA 不仅非常占内存，而且还非常卡顿。如果你想换个既轻量级、又不占内存的编辑器，最好还是使用「Sublime Text」编辑器。</p>\n</li>\n<li>\n<p><strong>使用比例</strong>：当然是 VS Code 更胜一筹。先不说别的，我就拿数据说话，我目前所在的研发团队有 200 人左右（120 个后台、80 个前端），他们绝大部分人都在用 VS Code 编码，妥妥的。</p>\n</li>\n</ul>\n<p>所以，如果你以后还问这个问题，那就真有些掉底了。</p>\n<h3 id=\"vs-code-的安装\"><a class=\"markdownIt-Anchor\" href=\"#vs-code-的安装\">#</a> VS Code 的安装</h3>\n<ul>\n<li>VS Code 官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20=\">https://code.visualstudio.com</span></li>\n</ul>\n<p>VS Code 的安装很简单，直接去官网下载安装包，然后双击安装即可。</p>\n<p><img data-src=\"http://img.smyhvae.com/20190313_1750_3.png\" alt=\"\"></p>\n<p>上图中，直接点击 download，一键下载安装即可。</p>\n<h2 id=\"二-崭露锋芒vs-code-快捷键\"><a class=\"markdownIt-Anchor\" href=\"#二-崭露锋芒vs-code-快捷键\">#</a> 二、崭露锋芒：VS Code 快捷键</h2>\n<p>VS Code 用得熟不熟，首先就看你是否会用快捷键。以下列出的内容，都是常用快捷键，而加粗部分的快捷键，使用频率则非常高。</p>\n<p>任何工具，掌握 20% 的技能，足矣应对 80% 的工作。既然如此，你可能会问：那就只保留 20% 的特性，不久可以满足 80% 的用户了吗？</p>\n<p>但我想说的是：<strong>那从来都不是同样的 20%</strong>，每个人都会用到不同的功能。</p>\n<p>掌握下面这些高频核心快捷键，你和你的工具，足矣露出锋芒。</p>\n<h3 id=\"1-工作区快捷键\"><a class=\"markdownIt-Anchor\" href=\"#1-工作区快捷键\">#</a> 1、工作区快捷键</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Shift + P</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + Shift + P</strong>，F1</td>\n<td style=\"text-align:left\">显示命令面板</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + B</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + B</strong></td>\n<td style=\"text-align:left\">显示 / 隐藏侧边栏</td>\n<td style=\"text-align:left\">很实用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>Cmd + \\</code></td>\n<td style=\"text-align:left\"><code>Ctrl + \\</code></td>\n<td style=\"text-align:left\"><strong>创建多个编辑器</strong></td>\n<td style=\"text-align:left\">【重要】抄代码利器</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + 1、2</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + 1、2</strong></td>\n<td style=\"text-align:left\">聚焦到第 1、第 2 个编辑器</td>\n<td style=\"text-align:left\">同上重要</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>cmd +/-</strong></td>\n<td style=\"text-align:left\"><strong>ctrl +/-</strong></td>\n<td style=\"text-align:left\">将工作区放大 / 缩小（包括代码字体、左侧导航栏）</td>\n<td style=\"text-align:left\">在投影仪场景经常用到</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + J</td>\n<td style=\"text-align:left\">Ctrl + J</td>\n<td style=\"text-align:left\">显示 / 隐藏控制台</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Shift + N</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + Shift + N</strong></td>\n<td style=\"text-align:left\">重新开一个软件的窗口</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + Shift + W</td>\n<td style=\"text-align:left\">Ctrl + Shift + W</td>\n<td style=\"text-align:left\">关闭软件的当前窗口</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + N</td>\n<td style=\"text-align:left\">Ctrl + N</td>\n<td style=\"text-align:left\">新建文件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + W</td>\n<td style=\"text-align:left\">Ctrl + W</td>\n<td style=\"text-align:left\">关闭当前文件</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-跳转操作\"><a class=\"markdownIt-Anchor\" href=\"#2-跳转操作\">#</a> 2、跳转操作</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Cmd + ` | 没有 | 在同一个软件的<strong>多个工作区</strong>之间切换 | 使用很频繁 |</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Option + 左右方向键</strong></td>\n<td style=\"text-align:left\">Ctrl + Pagedown/Pageup</td>\n<td style=\"text-align:left\">在已经打开的<strong>多个文件</strong>之间进行切换</td>\n<td style=\"text-align:left\">非常实用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Ctrl + Tab</td>\n<td style=\"text-align:left\">Ctrl + Tab</td>\n<td style=\"text-align:left\">在已经打开的多个文件之间进行跳转</td>\n<td style=\"text-align:left\">不如上面的快捷键快</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + Shift + O</td>\n<td style=\"text-align:left\">Ctrl + shift + O</td>\n<td style=\"text-align:left\">在当前文件的各种<strong>方法之间</strong>进行跳转</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Ctrl + G</td>\n<td style=\"text-align:left\">Ctrl + G</td>\n<td style=\"text-align:left\">跳转到指定行</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>Cmd+Shift+\\</code></td>\n<td style=\"text-align:left\"><code>Ctrl+Shift+\\</code></td>\n<td style=\"text-align:left\">跳转到匹配的括号</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-移动光标\"><a class=\"markdownIt-Anchor\" href=\"#3-移动光标\">#</a> 3、移动光标</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方向键</td>\n<td style=\"text-align:left\">方向键</td>\n<td style=\"text-align:left\">在<strong>单个字符</strong>之间移动光标</td>\n<td style=\"text-align:left\">大家都知道</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>option + 左右方向键</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + 左右方向键</strong></td>\n<td style=\"text-align:left\">在<strong>单词</strong>之间移动光标</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + 左右方向键</strong></td>\n<td style=\"text-align:left\"><strong>Fn + 左右方向键</strong></td>\n<td style=\"text-align:left\">在<strong>整行</strong>之间移动光标</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + ←</td>\n<td style=\"text-align:left\">Fn + ←（或 Win + ←）</td>\n<td style=\"text-align:left\">将光标定位到当前行的最左侧</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + →</td>\n<td style=\"text-align:left\">Fn + →（或 Win + →）</td>\n<td style=\"text-align:left\">将光标定位到当前行的最右侧</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + ↑</td>\n<td style=\"text-align:left\">Ctrl + Home</td>\n<td style=\"text-align:left\">将光标定位到文章的第一行</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + ↓</td>\n<td style=\"text-align:left\">Ctrl + End</td>\n<td style=\"text-align:left\">将光标定位到文章的最后一行</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + Shift + \\</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">在<strong>代码块</strong>之间移动光标</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"4-编辑操作\"><a class=\"markdownIt-Anchor\" href=\"#4-编辑操作\">#</a> 4、编辑操作</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Enter</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + Enter</strong></td>\n<td style=\"text-align:left\">在当前行的下方新增一行，然后跳至该行</td>\n<td style=\"text-align:left\">即使光标不在行尾，也能快速向下插入一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd+Shift+Enter</td>\n<td style=\"text-align:left\">Ctrl+Shift+Enter</td>\n<td style=\"text-align:left\">在当前行的上方新增一行，然后跳至该行</td>\n<td style=\"text-align:left\">即使光标不在行尾，也能快速向上插入一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Option + ↑</strong></td>\n<td style=\"text-align:left\"><strong>Alt + ↑</strong></td>\n<td style=\"text-align:left\">将代码向上移动</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Option + ↓</strong></td>\n<td style=\"text-align:left\"><strong>Alt + ↓</strong></td>\n<td style=\"text-align:left\">将代码向下移动</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Option + Shift + ↑</td>\n<td style=\"text-align:left\">Alt + Shift + ↑</td>\n<td style=\"text-align:left\">将代码向上复制</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Option + Shift + ↓</strong></td>\n<td style=\"text-align:left\"><strong>Alt + Shift + ↓</strong></td>\n<td style=\"text-align:left\">将代码向下复制</td>\n<td style=\"text-align:left\">写重复代码的利器</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-多光标编辑\"><a class=\"markdownIt-Anchor\" href=\"#5-多光标编辑\">#</a> 5、多光标编辑</h3>\n<table>\n<thead>\n<tr>\n<th>Mac 快捷键</th>\n<th>Win 快捷键</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Cmd + Option + 上下键</strong></td>\n<td><strong>Ctrl + Alt + 上下键</strong></td>\n<td>在连续的多列上，同时出现光标</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>Option + 鼠标点击任意位置</strong></td>\n<td><strong>Alt + 鼠标点击任意位置</strong></td>\n<td>在任意位置，同时出现光标</td>\n<td></td>\n</tr>\n<tr>\n<td>Option + Shift + 鼠标拖动</td>\n<td>Alt + Shift + 鼠标拖动</td>\n<td>在选中区域的每一行末尾，出现光标</td>\n<td></td>\n</tr>\n<tr>\n<td>Cmd + Shift + L</td>\n<td>Ctrl + Shift + L</td>\n<td>在选中文本的所有相同内容处，出现光标</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>其他的多光标编辑操作：（很重要）</p>\n<ul>\n<li>\n<p>选中某个文本，然后反复按住快捷键「 <strong>Cmd + D</strong> 」键（windows 用户是按住「<strong>Ctrl + D</strong>」键）， 即可将全文中相同的词逐一加入选择。</p>\n</li>\n<li>\n<p>选中一堆文本后，按住「<strong>Option + Shift + i</strong>」键（windows 用户是按住「<strong>Alt + Shift + I</strong>」键），既可在<strong>每一行的末尾</strong>都创建一个光标。</p>\n</li>\n</ul>\n<h3 id=\"6-删除操作\"><a class=\"markdownIt-Anchor\" href=\"#6-删除操作\">#</a> 6、删除操作</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Cmd + shift + K</td>\n<td style=\"text-align:left\">Ctrl + Shift + K</td>\n<td style=\"text-align:left\">删除整行</td>\n<td style=\"text-align:left\">「Cmd + X」的作用是剪切，但也可以删除整行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>option + Backspace</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + Backspace</strong></td>\n<td style=\"text-align:left\">删除光标之前的一个单词</td>\n<td style=\"text-align:left\">英文有效，很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">option + delete</td>\n<td style=\"text-align:left\">Ctrl + delete</td>\n<td style=\"text-align:left\">删除光标之后的一个单词</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Backspace</strong></td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">删除光标之前的整行内容</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + delete</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">删除光标之后的整行内容</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<p>备注：上面所讲到的移动光标、编辑操作、删除操作的快捷键，在其他编辑器里，大部分都适用。</p>\n<h3 id=\"7-编程语言相关\"><a class=\"markdownIt-Anchor\" href=\"#7-编程语言相关\">#</a> 7、编程语言相关</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Cmd + /</td>\n<td style=\"text-align:left\">Ctrl + /</td>\n<td style=\"text-align:left\">添加单行注释</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Option + Shift + F</strong></td>\n<td style=\"text-align:left\">Alt + shift + F</td>\n<td style=\"text-align:left\">代码格式化</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">F2</td>\n<td style=\"text-align:left\">F2</td>\n<td style=\"text-align:left\">以重构的方式进行<strong>重命名</strong></td>\n<td style=\"text-align:left\">改代码备</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Ctrl + J</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">将多行代码合并为一行</td>\n<td style=\"text-align:left\">Win 用户可在命令面板搜索” 合并行 “</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd +</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + U</td>\n<td style=\"text-align:left\">Ctrl + U</td>\n<td style=\"text-align:left\">将光标的移动回退到上一个位置</td>\n<td style=\"text-align:left\">撤销光标的移动和选择</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"8-搜索相关\"><a class=\"markdownIt-Anchor\" href=\"#8-搜索相关\">#</a> 8、搜索相关</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Mac 快捷键</th>\n<th style=\"text-align:left\">Win 快捷键</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + Shift + F</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + Shift +F</strong></td>\n<td style=\"text-align:left\">全局搜索代码</td>\n<td style=\"text-align:left\">很常用</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + P</strong></td>\n<td style=\"text-align:left\"><strong>Ctrl + P</strong></td>\n<td style=\"text-align:left\">在当前的项目工程里，<strong>全局</strong>搜索文件名</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Cmd + F</td>\n<td style=\"text-align:left\">Ctrl + F</td>\n<td style=\"text-align:left\">在当前文件中搜索代码，光标在搜索框里</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><strong>Cmd + G</strong></td>\n<td style=\"text-align:left\"><strong>F3</strong></td>\n<td style=\"text-align:left\">在当前文件中搜索代码，光标仍停留在编辑器里</td>\n<td style=\"text-align:left\">很巧妙</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"9-自定义快捷键\"><a class=\"markdownIt-Anchor\" href=\"#9-自定义快捷键\">#</a> 9、自定义快捷键</h3>\n<p>按住快捷键「Cmd + Shift + P」，弹出命令面板，在命令面板中输入 “快捷键”，可以进入快捷键的设置。</p>\n<p>当然，你也可以选择菜单栏「偏好设置 --&gt; 键盘快捷方式」，进入快捷键的设置：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190329_2120.png\" alt=\"\"></p>\n<h3 id=\"10-快捷键列表\"><a class=\"markdownIt-Anchor\" href=\"#10-快捷键列表\">#</a> 10、快捷键列表</h3>\n<p>你可以点击 VS Code 左下角的齿轮按钮，效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1738.png\" alt=\"\"></p>\n<p>上图中，在展开的菜单中选择「键盘快捷方式」，就可以查看和修改所有的快捷键列表了：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1739_2.png\" alt=\"\"></p>\n<h3 id=\"快捷键参考链接\"><a class=\"markdownIt-Anchor\" href=\"#快捷键参考链接\">#</a> 快捷键参考链接</h3>\n<ul>\n<li>快捷键速查表 [官方]：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vc2hvcnRjdXRzL2tleWJvYXJkLXNob3J0Y3V0cy13aW5kb3dzLnBkZg==\">https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf</span></li>\n</ul>\n<h2 id=\"三-命令面板的使用\"><a class=\"markdownIt-Anchor\" href=\"#三-命令面板的使用\">#</a> 三、命令面板的使用</h2>\n<p>Mac 用户按住快捷键  <code>Cmd+Shift+P</code>  （Windows 用户按住快捷键 <code>Ctrl+Shift+P</code> ），可以打开命令面板。效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190329_1750_2.png\" alt=\"\"></p>\n<p>如果们需要修改一些设置项，可以通过「命令面板」来操作，效率会更高。这里列举一些。</p>\n<h3 id=\"1-设置字体大小\"><a class=\"markdownIt-Anchor\" href=\"#1-设置字体大小\">#</a> 1、设置字体大小</h3>\n<p>在命令面板输入 “字体”，可以进行字体的设置，效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190329_2110.png\" alt=\"\"></p>\n<p>当然，你也可以在菜单栏，选择「首选项 - 设置 - 常用设置」，在这个设置项里修改字体大小。</p>\n<h3 id=\"2-快捷键设置\"><a class=\"markdownIt-Anchor\" href=\"#2-快捷键设置\">#</a> 2、快捷键设置</h3>\n<p>在命令面板输入 “快捷键”，就可以进入快捷键的设置。</p>\n<h3 id=\"3-大小写转换\"><a class=\"markdownIt-Anchor\" href=\"#3-大小写转换\">#</a> 3、大小写转换</h3>\n<p>选中文本后，在命令面板中输入 <code>transfrom</code> ，就可以修改文本的大小写了。</p>\n<p><img data-src=\"http://img.smyhvae.com/20190414_1751.png\" alt=\"\"></p>\n<h3 id=\"4-使用命令行启动-vs-code\"><a class=\"markdownIt-Anchor\" href=\"#4-使用命令行启动-vs-code\">#</a> 4、使用命令行启动 VS Code</h3>\n<p>（1）输入快捷键「Cmd + Shift + P 」，选择 <code>install code command</code> ：</p>\n<p><img data-src=\"http://img.smyhvae.com/20191103_1327.png\" alt=\"\"></p>\n<p>（2）使用命令行：</p>\n<ul>\n<li>\n<p><code>code</code>  命令：启动 VS Code 软件</p>\n</li>\n<li>\n<p><code>code pathName/fileName</code>  命令：通过 VS Code 软件打开指定目录 / 指定文件。</p>\n</li>\n</ul>\n<h2 id=\"四-私人订制vs-code-的常见配置\"><a class=\"markdownIt-Anchor\" href=\"#四-私人订制vs-code-的常见配置\">#</a> 四、私人订制：VS Code 的常见配置</h2>\n<h3 id=\"1-vs-code-设置为中文语言\"><a class=\"markdownIt-Anchor\" href=\"#1-vs-code-设置为中文语言\">#</a> 1、VS Code 设置为中文语言</h3>\n<p>Mac 用户按住快捷键  <code>Cmd+Shift+P</code>  （Windows 用户按住快捷键 <code>Ctrl+Shift+P</code> ），打开命令面板。</p>\n<p>在命令面板中，输入 <code>Configure Display Language</code> ，选择 <code>Install additional languages</code> ，然后安装插件 <code>Chinese (Simplified) Language Pack for Visual Studio Code</code>  即可。</p>\n<p>或者，我们可以直接安装插件 <code>Chinese (Simplified) Language Pack for Visual Studio Code</code> ，是一样的。</p>\n<p>安装完成后，重启 VS Code。</p>\n<h3 id=\"2-面包屑breadcrumb\"><a class=\"markdownIt-Anchor\" href=\"#2-面包屑breadcrumb\">#</a> 2、面包屑（Breadcrumb）</h3>\n<p>打开 VS Code 的设置项，选择「用户设置 -&gt; 工作台 -&gt; 导航路径」，如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20191108_1550.png\" alt=\"\"></p>\n<p>上图中，将红框部分打钩即可。</p>\n<p>设置成功后，我们就可以查看到当前文件的「层级结构」，非常方便。如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190415_2009.png\" alt=\"\"></p>\n<p>有了这个面包屑导航，我们可以在任意目录、任意文件之间随意跳转。</p>\n<h3 id=\"3-左右显示多个编辑器窗口抄代码利器\"><a class=\"markdownIt-Anchor\" href=\"#3-左右显示多个编辑器窗口抄代码利器\">#</a> 3、左右显示多个编辑器窗口（抄代码利器）</h3>\n<p>Mac 用户按住快捷键  <code>Cmd + \\</code> ， Windows 用户按住快捷键 <code>Ctrl + \\</code> ，即可同时打开多个编辑器窗口，效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200619_0030.gif\" alt=\"\"></p>\n<p>按快捷键「Cmd + 1 」切换到左边的窗口，按快捷键「Cmd + 2 」切换到右边的窗口。随时随地，想切就切。</p>\n<p>学会了这一招，以后抄代码的时候，leader 再也不用担心我抄得慢了，一天工资到手。</p>\n<h3 id=\"4-是否显示代码的行号\"><a class=\"markdownIt-Anchor\" href=\"#4-是否显示代码的行号\">#</a> 4、是否显示代码的行号</h3>\n<p>VS Code 默认显示代码的行号。你可以在设置项里搜索  <code>editor.lineNumbers</code>  修改设置，配置项如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2140.png\" alt=\"\"></p>\n<p>我建议保留这个设置项，无需修改。</p>\n<h3 id=\"5-右侧是否显示代码的缩略图\"><a class=\"markdownIt-Anchor\" href=\"#5-右侧是否显示代码的缩略图\">#</a> 5、右侧是否显示代码的缩略图</h3>\n<p>VS Code 会在代码的右侧，默认显示缩略图。你可以在设置项里搜索  <code>editor.minimap</code>  进行设置，配置项如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2156.png\" alt=\"\"></p>\n<h3 id=\"6-将当前行代码高亮显示更改光标所在行的背景色\"><a class=\"markdownIt-Anchor\" href=\"#6-将当前行代码高亮显示更改光标所在行的背景色\">#</a> 6、将当前行代码高亮显示（更改光标所在行的背景色）</h3>\n<p>当我们把光标放在某一行时，这一行的背景色并没有发生变化。如果想<strong>高亮显示</strong>当前行的代码，需要设置两步：</p>\n<p>（1）在设置项里搜索 <code>editor.renderLineHighlight</code> ，将选项值设置为 <code>all</code>  或者 <code>line</code> 。</p>\n<p>（2）在设置项里增加如下内容：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"workbench.colorCustomizations\": &#123;</span><br><span class=\"line\">    \"editor.lineHighlightBackground\": \"#00000090\",</span><br><span class=\"line\">    \"editor.lineHighlightBorder\": \"#ffffff30\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上方代码，第一行代码的意思是：修改光标所在行的背景色（背景色设置为全黑，不透明度 90%）；第二行代码的意思是：修改光标所在行的边框色。</p>\n<h3 id=\"7-改完代码后立即自动保存\"><a class=\"markdownIt-Anchor\" href=\"#7-改完代码后立即自动保存\">#</a> 7、改完代码后立即自动保存</h3>\n<p><strong>方式一</strong>：</p>\n<p>改完代码后，默认不会自动保存。你可以在设置项里搜索 <code>files.autoSave</code> ，修改配置项如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2216.png\" alt=\"\"></p>\n<p>上图中，我们将配置项修改为 <code>onFocusChange</code>  之后，那么，当光标离开该文件后，这个文件就会自动保存了。<strong>非常方便</strong>。</p>\n<p><strong>方式二</strong>：</p>\n<p>当然，你也可以直接在菜单栏选择「文件 - 自动保存」。勾选后，当你写完代码后，文件会立即实时保存。</p>\n<h3 id=\"8-保存代码后是否立即格式化\"><a class=\"markdownIt-Anchor\" href=\"#8-保存代码后是否立即格式化\">#</a> 8、保存代码后，是否立即格式化</h3>\n<p>保存代码后，默认<strong>不会立即</strong>进行代码的格式化。你可以在设置项里搜索 <code>editor.formatOnSave</code>  查看该配置项：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2213.png\" alt=\"\"></p>\n<p>我觉得这个配置项保持默认就好，不用打钩。</p>\n<h3 id=\"9-空格-or-制表符\"><a class=\"markdownIt-Anchor\" href=\"#9-空格-or-制表符\">#</a> 9、空格 or 制表符</h3>\n<p>VS Code 会根据你所打开的文件来决定该使用空格还是制表。也就是说，如果你的项目中使用的都是制表符，那么，当你在写新的代码时，按下 tab 键后，编辑器就会识别成制表符。</p>\n<p>常见的设置项如下：</p>\n<ul>\n<li><strong>editor.detectIndentation</strong>：自动检测（默认开启）。截图如下：</li>\n</ul>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2205.png\" alt=\"\"></p>\n<ul>\n<li><strong>editor.insertSpaces</strong>：按 Tab 键时插入空格（默认）。截图如下：</li>\n</ul>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2207.png\" alt=\"\"></p>\n<ul>\n<li><strong>editor.tabSize</strong>：一个制表符默认等于四个空格。截图如下：</li>\n</ul>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2209.png\" alt=\"\"></p>\n<h3 id=\"10-新建文件后的默认文件类型\"><a class=\"markdownIt-Anchor\" href=\"#10-新建文件后的默认文件类型\">#</a> 10、新建文件后的默认文件类型</h3>\n<p>当我们按下快捷键「Cmd + N」新建文件时，VS Code 默认无法识别这个文件到底是什么类型的，因此也就无法识别相应的语法高亮。</p>\n<p>如果你想修改默认的文件类型，可以在设置项里搜索 <code>files.defaultLanguage</code> ，设置项如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190417_2221.png\" alt=\"\"></p>\n<p>上图中的红框部分，填入你期望的默认文件类型。我填的是 <code>html</code>  类型，你也可以填写成  <code>javascript</code>  或者  <code>markdown</code> ，或者其他的语言类型。</p>\n<h3 id=\"11-删除文件时是否弹出确认框\"><a class=\"markdownIt-Anchor\" href=\"#11-删除文件时是否弹出确认框\">#</a> 11、删除文件时，是否弹出确认框</h3>\n<p>当我们在 VS Code 中删除文件时，默认会弹出确认框。如果你想修改设置，可以在设置项里搜索 <code>xplorer.confirmDelete</code> 。截图如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1758.png\" alt=\"\"></p>\n<p>我建议这个设置项保持默认的打钩就好，不用修改。删除文件前的弹窗提示，也是为了安全考虑，万一手贱不小心删了呢？</p>\n<blockquote>\n<p>接下来，我们来讲一些更高级的配置。</p>\n</blockquote>\n<h3 id=\"12-文件对比\"><a class=\"markdownIt-Anchor\" href=\"#12-文件对比\">#</a> 12、文件对比</h3>\n<p>VS Code 默认支持<strong>对比两个文件的内容</strong>。选中两个文件，然后右键选择「将已选项进行比较」即可，效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190329_1756.png\" alt=\"\"></p>\n<p>VS Code 自带的对比功能并不够强大，我们可以安装插件 <code>compareit</code> ，进行更丰富的对比。比如说，安装完插件 <code>compareit</code>  之后，我们可以将「当前文件」与「剪切板」里的内容进行对比：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190329_1757.png\" alt=\"\"></p>\n<h3 id=\"13-查找某个函数在哪些地方被调用了\"><a class=\"markdownIt-Anchor\" href=\"#13-查找某个函数在哪些地方被调用了\">#</a> 13、查找某个函数在哪些地方被调用了</h3>\n<p>比如我已经在 <code>a.js</code>  文件里调用了  <code>foo()</code>  函数。那么，如果我想知道 <code>foo()</code>  函数在其他文件中是否也被调用了，该怎么做呢？</p>\n<p>做法如下：在  <code>a.js</code>  文件里，选中 <code>foo()</code>  函数（或者将光标放置在 <code>foo()</code>  函数上），然后按住快捷键「Shift + F12」，就能看到  <code>foo()</code>  函数在哪些地方被调用了，比较实用。</p>\n<h3 id=\"14-鼠标操作\"><a class=\"markdownIt-Anchor\" href=\"#14-鼠标操作\">#</a> 14、鼠标操作</h3>\n<ul>\n<li>\n<p>在当前行的位置，鼠标三击，可以选中当前行。</p>\n</li>\n<li>\n<p>用鼠标单击文件的<strong>行号</strong>，可以选中当前行。</p>\n</li>\n<li>\n<p>在某个<strong>行号</strong>的位置，<strong>上下移动鼠标，可以选中多行</strong>。</p>\n</li>\n</ul>\n<h3 id=\"15-重构\"><a class=\"markdownIt-Anchor\" href=\"#15-重构\">#</a> 15、重构</h3>\n<p>重构分很多种，我们来举几个例子。</p>\n<p><strong>命名重构</strong>：</p>\n<p>当我们尝试去修改某个函数（或者变量名）时，我们可以把光标放在上面，然后按下「F2」键，那么，这个函数（或者变量名）出现的地方都会被修改。</p>\n<p><strong>方法重构</strong>：</p>\n<p>选中某一段代码，这个时候，代码的左侧会出现一个「灯泡图标」，点击这个图标，就可以把这段代码提取为一个单独的函数。</p>\n<h3 id=\"16-在当前文件中搜索\"><a class=\"markdownIt-Anchor\" href=\"#16-在当前文件中搜索\">#</a> 16、在当前文件中搜索</h3>\n<p>在上面的快捷键列表中，我们已经知道如下快捷键：</p>\n<ul>\n<li>\n<p>Cmd + F（Win 用户是 Ctrl + F）：在当前文件中搜索，光标在搜索框里</p>\n</li>\n<li>\n<p>Cmd + G（Win 用户是 F3）：在当前文件中搜索，光标仍停留在编辑器里</p>\n</li>\n</ul>\n<p>另外，你可能会注意到，搜索框里有很多按钮，每个按钮都对应着不同的功能，如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190415_2052.png\" alt=\"\"></p>\n<p>上图中，你可以通过「Tab」键和「Shift + Tab」键在输入框和替换框之间进行切换。</p>\n<p>「在选定内容中查找」这个功能还是比较实用的。你也可以在设置项里搜索  <code>editor.find.autoFindInSelection</code> ，勾选该设置项后，那么，当你选中指定内容后，然后按住「Cmd + F」，就可以<strong>自动</strong>只在这些内容里进行查找。该设置项如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20191108_1655.png\" alt=\"\"></p>\n<h3 id=\"17-全局搜索\"><a class=\"markdownIt-Anchor\" href=\"#17-全局搜索\">#</a> 17、全局搜索</h3>\n<p>在上面的快捷键列表中，我们已经知道如下快捷键：</p>\n<ul>\n<li>Cmd + Shift + F（Win 用户是 Ctrl + Shift +F）：在全局的文件夹中进行搜索。效果如下：</li>\n</ul>\n<p><img data-src=\"http://img.smyhvae.com/20190415_2107.png\" alt=\"\"></p>\n<p>上图中，你可以点击红框部分，展开更多的配置项。</p>\n<h3 id=\"18-git-版本管理\"><a class=\"markdownIt-Anchor\" href=\"#18-git-版本管理\">#</a> 18、Git 版本管理</h3>\n<p>VS Code 自带了 Git 版本管理，如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1850.png\" alt=\"\"></p>\n<p>上图中，我们可以在这里进行常见的 git 命令操作。如果你还不熟悉 <strong>Git 版本管理</strong>，可以先去补补课。</p>\n<p>与此同时，我建议安装插件 <code>GitLens</code> ，它是 VS Code 中我最推荐的一个插件，简直是 Git 神器，码农必备。</p>\n<h3 id=\"19-将工作区放大缩小\"><a class=\"markdownIt-Anchor\" href=\"#19-将工作区放大缩小\">#</a> 19、将工作区放大 / 缩小</h3>\n<p>我们在上面的设置项里修改字体大小后，仅仅只是修改了代码的字体大小。</p>\n<p>如果你想要缩放整个工作区（包括代码的字体、左侧导航栏的字体等），可以按下快捷键「<strong>cmd +/-</strong>」。windows 用户是按下「ctrl +/-」</p>\n<p><strong>当我们在投影仪上给别人演示代码的时候，这一招十分管用</strong>。</p>\n<p>如果你想恢复默认的工作区大小，可以在命令面板输入 <code>重置缩放</code> （英文是 <code>reset zoom</code> ）</p>\n<h3 id=\"20-创建多层子文件夹\"><a class=\"markdownIt-Anchor\" href=\"#20-创建多层子文件夹\">#</a> 20、创建多层子文件夹</h3>\n<p>我们可以在新建文件夹的时候，如果直接输入 <code>aa/bb/cc</code> ，比如：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_2022.png\" alt=\"\"></p>\n<p>那么，就可以创建多层子文件夹，效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_2023.png\" alt=\"\"></p>\n<h3 id=\"21-vscode-文件夹的作用\"><a class=\"markdownIt-Anchor\" href=\"#21-vscode-文件夹的作用\">#</a> 21、 <code>.vscode</code>  文件夹的作用</h3>\n<p>为了统一团队的 vscode 配置，我们可以在项目的根目录下建立 <code>.vscode</code>  目录，在里面放置一些配置内容，比如：</p>\n<ul>\n<li>\n<p><code>settings.json</code> ：工作空间设置、代码格式化配置、插件配置。</p>\n</li>\n<li>\n<p><code>sftp.json</code> ：ftp 文件传输的配置。</p>\n</li>\n</ul>\n<p><code>.vscode</code>  目录里的配置只针对当前项目范围内生效。将 <code>.vscode</code>  提交到代码仓库，大家统一配置时，会非常方便。</p>\n<h3 id=\"22-自带终端\"><a class=\"markdownIt-Anchor\" href=\"#22-自带终端\">#</a> 22、自带终端</h3>\n<p>我们可以按下「Ctrl + `」打开 VS Code 自带的终端。我认为内置终端并没有那么好用，我更建议你使用第三方的终端 <strong>item2</strong>。</p>\n<h3 id=\"23-markdown-语法支持\"><a class=\"markdownIt-Anchor\" href=\"#23-markdown-语法支持\">#</a> 23、markdown 语法支持</h3>\n<p>VS Code 自带 markdown 语法高亮。也就是说，如果你是用 markdown 格式写文章，则完全可以用 VS Code 进行写作。</p>\n<p>写完 md 文件之后，你可以点击右上角的按钮进行预览，如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1907.png\" alt=\"\"></p>\n<p>我一般是安装「Markdown Preview Github Styling」插件，以 GitHub 风格预览 Markdown 样式。样式十分简洁美观。</p>\n<p>你也可以在控制面板输入 <code>Markdown: 打开预览</code> ，直接全屏预览 markdown 文件。</p>\n<h3 id=\"24-emmet-in-vs-code\"><a class=\"markdownIt-Anchor\" href=\"#24-emmet-in-vs-code\">#</a> 24、Emmet in VS Code</h3>\n<p><code>Emmet</code>  可以极大的提高 html 和 css 的编写效率，它提供了一种非常简练的语法规则。</p>\n<p>举个例子，我们在编辑器中输入缩写代码： <code>ul&gt;li*6</code>  ，然后按下 Tab 键，即可得到如下代码片段：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>VS Code 默认支持 Emmet。更多 Emmet 语法规则，请自行查阅。</p>\n<h3 id=\"25-修改字体使用fira-code字体\"><a class=\"markdownIt-Anchor\" href=\"#25-修改字体使用fira-code字体\">#</a> 25、修改字体，使用「Fira Code」字体</h3>\n<p>这款字体很漂亮，很适合用来写代码：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200516_1633.png\" alt=\"\"></p>\n<p>安装步骤如下：</p>\n<p>（1）进入 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvbnNreS9GaXJhQ29kZQ==\">https://github.com/tonsky/FiraCode</span> 网站，下载并安装「Fira Code」字体。</p>\n<p>（2）打开 VS Code 的「设置」，搜索 <code>font</code> ，修改相关配置为如下内容：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"editor.fontFamily\": \"'Fira Code',Menlo, Monaco, 'Courier New', monospace\", // 设置字体显示</span><br><span class=\"line\">\"editor.fontLigatures\": false,//控制是否启用字体连字，true启用，false不启用</span><br></pre></td></tr></table></figure>\n<p>上方的第二行配置，取决于个人习惯，我是直接设置为 <code>&quot;editor.fontLigatures&quot;: null</code> ，因为我不太习惯连字。</p>\n<h3 id=\"26-代码格式化prettier\"><a class=\"markdownIt-Anchor\" href=\"#26-代码格式化prettier\">#</a> 26、代码格式化：Prettier</h3>\n<p>我们可以使用  <code>Prettier</code>  进行代码格式化，会让代码的展示更加美观。步骤如下：</p>\n<p>（1）安装插件  <code>Prettier</code> 。</p>\n<p>（2）在项目的根路径下，新建文件 <code>.prettierrc</code> ，并在文件中添加如下内容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"printWidth\"</span>: <span class=\"number\">150</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"tabWidth\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"semi\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"trailingComma\"</span>: <span class=\"string\">\"es5\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"tslintIntegration\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"insertSpaceBeforeFunctionParenthesis\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的内容，是我自己的配置，你可以参考。</p>\n<p>更多配置，可以参考官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmV0dGllci5pby9kb2NzL2VuL29wdGlvbnMuaHRtbA==\">https://prettier.io/docs/en/options.html</span></p>\n<h3 id=\"27-文件传输sftp\"><a class=\"markdownIt-Anchor\" href=\"#27-文件传输sftp\">#</a> 27、文件传输：sftp</h3>\n<p>如果你需要将本地文件通过 ftp 的形式上传到局域网的服务器，可以安装 <code>sftp</code>  这个插件，很好用。在公司会经常用到。</p>\n<p>步骤如下：</p>\n<p>（1）安装插件 <code>sftp</code> 。</p>\n<p>（2）配置  <code>sftp.json</code>  文件。 插件安装完成后，输入快捷键「cmd+shift+P」弹出命令面板，然后输入 <code>sftp:config</code> ，回车，当前工程的 <code>.vscode</code>  文件夹下就会自动生成一个 <code>sftp.json</code>  文件，我们需要在这个文件里配置的内容可以是：</p>\n<ul>\n<li>\n<p><code>host</code> ：服务器的 IP 地址</p>\n</li>\n<li>\n<p><code>username</code> ：用户名</p>\n</li>\n<li>\n<p><code>privateKeyPath</code> ：存放在本地的已配置好的用于登录工作站的密钥文件（也可以是 ppk 文件）</p>\n</li>\n<li>\n<p><code>remotePath</code> ：工作站上与本地工程同步的文件夹路径，需要和本地工程文件根目录同名，且在使用 sftp 上传文件之前，要手动在工作站上 mkdir 生成这个根目录</p>\n</li>\n<li>\n<p><code>ignore</code> ：指定在使用 sftp: sync to remote 的时候忽略的文件及文件夹，注意每一行后面有逗号，最后一行没有逗号</p>\n</li>\n</ul>\n<p>举例如下：(注意，其中的注释需要去掉)</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"host\"</span>: <span class=\"string\">\"192.168.xxx.xxx\"</span>, <span class=\"comment\">//服务器ip</span></span><br><span class=\"line\">  <span class=\"attr\">\"port\"</span>: <span class=\"number\">22</span>, <span class=\"comment\">//端口，sftp模式是22</span></span><br><span class=\"line\">  <span class=\"attr\">\"username\"</span>: <span class=\"string\">\"\"</span>, <span class=\"comment\">//用户名</span></span><br><span class=\"line\">  <span class=\"attr\">\"password\"</span>: <span class=\"string\">\"\"</span>, <span class=\"comment\">//密码</span></span><br><span class=\"line\">  <span class=\"attr\">\"protocol\"</span>: <span class=\"string\">\"sftp\"</span>, <span class=\"comment\">//模式</span></span><br><span class=\"line\">  <span class=\"attr\">\"agent\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"privateKeyPath\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"passphrase\"</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"passive\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"interactiveAuth\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"remotePath\"</span>: <span class=\"string\">\"/root/node/build/\"</span>, <span class=\"comment\">//服务器上的文件地址</span></span><br><span class=\"line\">  <span class=\"attr\">\"context\"</span>: <span class=\"string\">\"./server/build\"</span>, <span class=\"comment\">//本地的文件地址</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">\"uploadOnSave\"</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//监听保存并上传</span></span><br><span class=\"line\">  <span class=\"attr\">\"syncMode\"</span>: <span class=\"string\">\"update\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"watcher\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">//监听外部文件</span></span><br><span class=\"line\">    <span class=\"attr\">\"files\"</span>: <span class=\"literal\">false</span>, <span class=\"comment\">//外部文件的绝对路径</span></span><br><span class=\"line\">    <span class=\"attr\">\"autoUpload\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"autoDelete\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">\"ignore\"</span>: [</span><br><span class=\"line\">    <span class=\"comment\">//忽略项</span></span><br><span class=\"line\">    <span class=\"string\">\"**/.vscode/**\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"**/.git/**\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"**/.DS_Store\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>（3）在 VS Code 的当前文件里，选择「右键 -&gt; upload」，就可以将本地的代码上传到 指定的 ftp 服务器上（也就是在上方  <code>host</code>  中配置的服务器 ip）。</p>\n<p>我们还可以选择「右键 -&gt; Diff with Remote」，就可以将本地的代码和 ftp 服务器上的代码做对比。</p>\n<h2 id=\"七-vs-code-配置云同步\"><a class=\"markdownIt-Anchor\" href=\"#七-vs-code-配置云同步\">#</a> 七、VS Code 配置云同步</h2>\n<p>我们可以将配置云同步，这样的话，当我们换个电脑时，即可将配置一键同步到本地，就不需要重新安装插件了，也不需要重新配置软件。</p>\n<p>我们还可以把配置分享其他用户，也可以把其他用户的配置给自己用。</p>\n<p><strong>将自己本地的配置云同步到 GitHub</strong>：</p>\n<p>（1）安装插件  <code>settings-sync</code> 。</p>\n<p>（2）安装完插件后，在插件里使用 GitHub 账号登录。</p>\n<p>（3）登录后在 vscode 的界面中，可以选择一个别人的 gist；也可以忽略掉，然后创建一个属于自己的 gist。</p>\n<p>（4）使用快捷键 「Command + Shift + P」，在弹出的命令框中输入 sync，并选择「更新 / 上传配置」，这样就可以把最新的配置上传到 GitHub。</p>\n<p><strong>换另外一个电脑时，从云端同步配置到本地</strong>：</p>\n<p>（1）当我们换另外一台电脑时，可以先在 VS Code 中安装  <code>settings-sync</code>  插件。</p>\n<p>（2）安装完插件后，在插件里使用 GitHub 账号登录。</p>\n<p>（3）登录之后，插件的界面上，会自动出现之前的同步记录：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200521_1530.png\" alt=\"\"></p>\n<p>上图中，我们点击最新的那条记录，就可将云端的最新配置同步到本地：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200521_1550.png\" alt=\"\"></p>\n<p>如果你远程的配置没有成功同步到本地，那可能是网络的问题，此时，可以使用快捷键 「Command + Shift + P」，在弹出的命令框中输入 sync，并选择「下载配置」，多试几次。</p>\n<p><strong>使用其他人的配置</strong>：</p>\n<p>如果我们想使用别人的配置，首先需要对方提供给你 gist。具体步骤如下：</p>\n<p>（1）安装插件  <code>settings-sync</code> 。</p>\n<p>（2）使用快捷键 「Command + Shift + P」，在弹出的命令框中输入 sync，并选择「下载配置」</p>\n<p>（3）在弹出的界面中，选择「Download Public Gist」，然后输入别人分享给你的 gist。注意，这一步不需要登录 GitHub 账号。</p>\n<h2 id=\"八-三头六臂vs-code-插件推荐\"><a class=\"markdownIt-Anchor\" href=\"#八-三头六臂vs-code-插件推荐\">#</a> 八、三头六臂：VS Code 插件推荐</h2>\n<p>VS Code 有一个很强大的功能就是支持插件扩展，让你的编辑器仿佛拥有了三头六臂。</p>\n<p><img data-src=\"http://img.smyhvae.com/20191108_1553_2.png\" alt=\"\"></p>\n<p>上图中，点击红框部分，即可在输入框里，查找你想要的插件名，然后进行安装。</p>\n<p>我来列举几个常见的插件，这些插件都很实用。注意：<strong>顺序越靠前，越实用</strong>。</p>\n<h3 id=\"1-gitlens-荐\"><a class=\"markdownIt-Anchor\" href=\"#1-gitlens-荐\">#</a> 1、GitLens 【荐】</h3>\n<p>我强烈建议你安装插件 <code>GitLens</code> ，它是 VS Code 中我最推荐的一个插件，简直是 Git 神器，码农必备。如果你不知道，那真是 out 了。</p>\n<p>GitLens 在 Git 管理上有很多强大的功能，比如：</p>\n<ul>\n<li>\n<p>将光标放置在代码的当前行，可以看到这样代码的提交者是谁，以及提交时间。这一点，是 GitLens 最便捷的功能。</p>\n</li>\n<li>\n<p>查看某个 commit 的代码改动记录</p>\n</li>\n<li>\n<p>查看不同的分支</p>\n</li>\n<li>\n<p>可以将两个 commit 进行代码对比</p>\n</li>\n<li>\n<p>甚至可以将两个 branch 分支进行整体的代码对比。这一点，简直是 GitLens 最强大的功能。当我们在不同分支 review 代码的时候，就可以用到这一招。</p>\n</li>\n</ul>\n<h3 id=\"2-git-history\"><a class=\"markdownIt-Anchor\" href=\"#2-git-history\">#</a> 2、Git History</h3>\n<p>有些同学习惯使用编辑器中的 Git 管理工具，而不太喜欢要打开另外一个 Git UI 工具的同学，这一款插件满足你查询所有 Git 记录的需求。</p>\n<h3 id=\"3-live-server-荐\"><a class=\"markdownIt-Anchor\" href=\"#3-live-server-荐\">#</a> 3、Live Server 【荐】</h3>\n<p>在本地启动一个服务器，代码写完后可以实现「热更新」，实时地在网页中看到运行效果。就不需要每次都得手动刷新页面了。</p>\n<p>使用方式：安装插件后，开始写代码；代码写完后，右键选择「Open with Live Server」。</p>\n<h3 id=\"4-chinese-simplified-language-pack-for-visual-studio-code\"><a class=\"markdownIt-Anchor\" href=\"#4-chinese-simplified-language-pack-for-visual-studio-code\">#</a> 4、Chinese (Simplified) Language Pack for Visual Studio Code</h3>\n<p>让软件显示为简体中文语言。</p>\n<h3 id=\"5-bracket-pair-colorizer-2突出显示成对的括号荐\"><a class=\"markdownIt-Anchor\" href=\"#5-bracket-pair-colorizer-2突出显示成对的括号荐\">#</a> 5、Bracket Pair Colorizer 2：突出显示成对的括号【荐】</h3>\n<p><code>Bracket Pair Colorizer 2</code>  插件：以不同颜色显示成对的括号，并用连线标注括号范围。简称<strong>彩虹括号</strong>。</p>\n<p>另外，还有个 <code>Rainbow Brackets</code>  插件，也可以突出显示成对的括号。</p>\n<h3 id=\"6-sftp文件传输-荐\"><a class=\"markdownIt-Anchor\" href=\"#6-sftp文件传输-荐\">#</a> 6、sftp：文件传输 【荐】</h3>\n<p>如果你需要将本地文件通过 ftp 的形式上传到局域网的服务器，可以安装 <code>sftp</code>  这个插件，很好用。在公司会经常用到。</p>\n<p>详细配置已经在上面讲过。</p>\n<h3 id=\"7-open-in-browser\"><a class=\"markdownIt-Anchor\" href=\"#7-open-in-browser\">#</a> 7、open in browser</h3>\n<p>安装 <code>open in browser</code>  插件后，在 HTML 文件中「右键选择 --&gt; Open in Default Browser」，即可在浏览器中预览网页。</p>\n<h3 id=\"8-highlight-icemode选中相同的代码时让高亮显示更加明显荐\"><a class=\"markdownIt-Anchor\" href=\"#8-highlight-icemode选中相同的代码时让高亮显示更加明显荐\">#</a> 8、highlight-icemode：选中相同的代码时，让高亮显示更加明显【荐】</h3>\n<p>VSCode 自带的高亮显示，实在是不够显眼。用插件支持一下吧。</p>\n<p>所用了这个插件之后，VS Code 自带的高亮就可以关掉了：</p>\n<p>在用户设置里添加 <code>&quot;editor.selectionHighlight&quot;: false</code>  即可。</p>\n<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbG1lcl9rYWkvYXJ0aWNsZS9kZXRhaWxzLzc5NTQ4MTY0\">vscode 选中后相同内容高亮插件推荐</span></p>\n<h3 id=\"9-vscode-icons\"><a class=\"markdownIt-Anchor\" href=\"#9-vscode-icons\">#</a> 9、vscode-icons</h3>\n<p>vscode-icons 会根据文件的后缀名来显示不同的图标，让你更直观地知道每种文件是什么类型的。</p>\n<h3 id=\"10-project-manager\"><a class=\"markdownIt-Anchor\" href=\"#10-project-manager\">#</a> 10、Project Manager</h3>\n<p>工作中，我们经常会来回切换多个项目，每次都要找到对应项目的目录再打开，比较麻烦。Project Manager 插件可以解决这样的烦恼，它提供了专门的视图来展示你的项目，我们可以把常用的项目保存在这里，需要时一键切换，十分方便。</p>\n<h3 id=\"11-todo-highlight\"><a class=\"markdownIt-Anchor\" href=\"#11-todo-highlight\">#</a> 11、TODO Highlight</h3>\n<p>写代码过程中，突然发现一个 Bug，但是又不想停下来手中的活，以免打断思路，怎么办？按照代码规范，我们一般是在代码中加个 TODO 注释。比如：（注意，一定要写成大写 <code>TODO</code> ，而不是小写的 <code>todo</code> ）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;TODO:这里有个bug，我一会儿再收拾你</span><br></pre></td></tr></table></figure>\n<p>或者：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F;FIXME:我也不知道为啥， but it works only that way.</span><br></pre></td></tr></table></figure>\n<p>安装了插件  <code>TODO Highlight</code>  之后，按住「Cmd + Shift + P」打开命令面板，输入「Todohighlist」，选择相关的命令，我们就可以看到一个 todoList 的清单。</p>\n<h3 id=\"12-wakatime-荐\"><a class=\"markdownIt-Anchor\" href=\"#12-wakatime-荐\">#</a> 12、WakaTime 【荐】</h3>\n<p>统计在 VS Code 里写代码的时间。统计效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200618_2300.png\" alt=\"\"></p>\n<h3 id=\"13-code-time\"><a class=\"markdownIt-Anchor\" href=\"#13-code-time\">#</a> 13、Code Time</h3>\n<p><code>Code Time</code>  插件：记录编程时间，统计代码行数。</p>\n<p>安装该插件后，VS Code 底部的状态栏右下角可以看到时间统计。点击那个位置之后，选择「Code Time Dashboard」，即可查看统计结果。</p>\n<p>备注：团长试了一下这个 code time 插件，发现统计结果不是很准。</p>\n<h3 id=\"14-markdown-preview-github-styling-荐\"><a class=\"markdownIt-Anchor\" href=\"#14-markdown-preview-github-styling-荐\">#</a> 14、Markdown Preview Github Styling 【荐】</h3>\n<p>以 GitHub 风格预览 Markdown 样式，十分简洁优雅。就像下面这样，左侧书写 Markdown 文本，右侧预览 Markdown 的渲染效果：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200618_2025.png\" alt=\"\"></p>\n<h3 id=\"15-markdown-preview-enhanced\"><a class=\"markdownIt-Anchor\" href=\"#15-markdown-preview-enhanced\">#</a> 15、Markdown Preview Enhanced</h3>\n<p>预览 Markdown 样式。</p>\n<h3 id=\"markdown-all-in-one\"><a class=\"markdownIt-Anchor\" href=\"#markdown-all-in-one\">#</a> Markdown All in One</h3>\n<p>这个插件将帮助你更高效地在 Markdown 中编写文档。</p>\n<h3 id=\"16-settings-sync荐\"><a class=\"markdownIt-Anchor\" href=\"#16-settings-sync荐\">#</a> 16、Settings Sync【荐】</h3>\n<ul>\n<li>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoYW5hbGlraGFuL2NvZGUtc2V0dGluZ3Mtc3luYw==\">https://github.com/shanalikhan/code-settings-sync</span></p>\n</li>\n<li>\n<p>作用：多台设备之间，同步 VS Code 配置。通过登录 GitHub 账号来使用这个同步工具。</p>\n</li>\n</ul>\n<p>同步的详细操作已在上面讲过。</p>\n<h3 id=\"17-vscode-syncing\"><a class=\"markdownIt-Anchor\" href=\"#17-vscode-syncing\">#</a> 17、vscode-syncing</h3>\n<ul>\n<li>\n<p>地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vbm9yb2F6b3JvL3ZzY29kZS1zeW5jaW5n\">https://github.com/nonoroazoro/vscode-syncing</span></p>\n</li>\n<li>\n<p>作用：多台设备之间，同步 VS Code 配置。</p>\n</li>\n</ul>\n<h3 id=\"18-vetur\"><a class=\"markdownIt-Anchor\" href=\"#18-vetur\">#</a> 18、Vetur</h3>\n<p>Vue 多功能集成插件，包括：语法高亮，智能提示，emmet，错误提示，格式化，自动补全，debugger。VS Code 官方钦定 Vue 插件，Vue 开发者必备。</p>\n<h3 id=\"19-es7-reactreduxgraphqlreact-native-snippets\"><a class=\"markdownIt-Anchor\" href=\"#19-es7-reactreduxgraphqlreact-native-snippets\">#</a> 19、ES7 React/Redux/GraphQL/React-Native snippets</h3>\n<p>React/Redux/react-router 的语法智能提示。</p>\n<h3 id=\"20-minapp小程序支持\"><a class=\"markdownIt-Anchor\" href=\"#20-minapp小程序支持\">#</a> 20、minapp：小程序支持</h3>\n<p>小程序开发必备插件。</p>\n<h3 id=\"21-prettier代码格式化\"><a class=\"markdownIt-Anchor\" href=\"#21-prettier代码格式化\">#</a> 21、Prettier：代码格式化</h3>\n<p>Prettier 是一个代码格式化工具，只关注格式化，但不具备校验功能。在一个多人协同开发的团队中，统一的代码编写规范非常重要。一套规范可以让我们编写的代码达到一致的风格，提高代码的可读性和统一性。自然维护性也会有所提高。</p>\n<h3 id=\"22-eslint代码格式校验\"><a class=\"markdownIt-Anchor\" href=\"#22-eslint代码格式校验\">#</a> 22、ESLint：代码格式校验</h3>\n<p>日常开发中，建议用可以用 Prettier 做代码格式化，然后用 eslint 做校验。</p>\n<h3 id=\"23-beautify\"><a class=\"markdownIt-Anchor\" href=\"#23-beautify\">#</a> 23、Beautify</h3>\n<p>代码格式化工具。</p>\n<p>备注：相比之下，Prettier 是当前最流行的代码格式化工具，比 Beautify 用得更多。</p>\n<h3 id=\"24-javascriptes6-code-snippets\"><a class=\"markdownIt-Anchor\" href=\"#24-javascriptes6-code-snippets\">#</a> 24、JavaScript(ES6) code snippets</h3>\n<p>ES6 语法智能提示，支持快速输入。</p>\n<h3 id=\"25-search-node_modules-荐\"><a class=\"markdownIt-Anchor\" href=\"#25-search-node_modules-荐\">#</a> 25、Search node_modules 【荐】</h3>\n<p><code>node_modules</code>  模块里面的文件夹和模块实在是太多了，根本不好找。好在安装  <code>Search node_modules</code>  这个插件后，输入快捷键「Cmd + Shift + P」，然后输入  <code>node_modules</code> ，在弹出的选项中选择  <code>Search node_modules</code> ，即可搜索 node_modules 里的模块。</p>\n<p><img data-src=\"http://img.smyhvae.com/20200618_2100.png\" alt=\"\"></p>\n<h3 id=\"26-indent-rainbow突出显示代码缩进\"><a class=\"markdownIt-Anchor\" href=\"#26-indent-rainbow突出显示代码缩进\">#</a> 26、indent-rainbow：突出显示代码缩进</h3>\n<p><code>indent-rainbow</code>  插件：突出显示代码缩进。</p>\n<p>安装完成后，效果如下图所示：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1958.png\" alt=\"\"></p>\n<h3 id=\"27-javascript-console-utils快速打印-log-日志荐\"><a class=\"markdownIt-Anchor\" href=\"#27-javascript-console-utils快速打印-log-日志荐\">#</a> 27、javascript console utils：快速打印 log 日志【荐】</h3>\n<p>安装这个插件后，当我们按住快捷键「Cmd + Shift + L」后，即可自动出现日志  <code>console.log()</code> 。简直是日志党福音。</p>\n<p>当我们选中某个变量  <code>name</code> ，然后按住快捷键「Cmd + Shift + L」，即可自动出现这个变量的日志  <code>console.log(name)</code> 。</p>\n<p>其他的同类插件还有：Turbo Console Log。</p>\n<p>不过，生产环境的代码，还是尽量少打日志比较好，避免出现一些异常。</p>\n<p>编程有三等境界：</p>\n<ul>\n<li>\n<p>第三等境界是打日志，这是最简单、便捷的方式，略显低级，一般新手或资深程序员偷懒时会用。</p>\n</li>\n<li>\n<p>第二等境界是断点调试，在前端、Java、PHP、iOS 开发时非常常用，通过断点调试可以很直观地跟踪代码执行逻辑、调用栈、变量等，是非常实用的技巧。</p>\n</li>\n<li>\n<p>第一等境界是测试驱动开发，在写代码之前先写测试。与第二等的断点调试刚好相反，大部分人不是很习惯这种方式，但在国外开发者或者敏捷爱好者看来，这是最高效的开发方式，在保证代码质量、重构等方面非常有帮助，是现代编程开发必不可少的一部分。</p>\n</li>\n</ul>\n<h3 id=\"28-code-spell-checker单词拼写错误检查\"><a class=\"markdownIt-Anchor\" href=\"#28-code-spell-checker单词拼写错误检查\">#</a> 28、Code Spell Checker：单词拼写错误检查</h3>\n<p>这个拼写检查程序的目标是帮助捕获常见的单词拼写错误，可以检测驼峰命名。从此告别 Chinglish.</p>\n<h3 id=\"29-local-history-荐\"><a class=\"markdownIt-Anchor\" href=\"#29-local-history-荐\">#</a> 29、Local History 【荐】</h3>\n<p>维护文件的本地历史记录，强烈建议安装。代码意外丢失时，有时可以救命。</p>\n<p><img data-src=\"http://img.smyhvae.com/20200618_2246.png\" alt=\"\"></p>\n<h3 id=\"30-polacode-2020生成代码截图-荐\"><a class=\"markdownIt-Anchor\" href=\"#30-polacode-2020生成代码截图-荐\">#</a> 30、Polacode-2020：生成代码截图 【荐】</h3>\n<p>可以把代码片段保存成美观的图片，主题不同，代码的配色方案也不同，也也可以自定义设置图片的边框颜色、大小、阴影。</p>\n<p>尤其是在我们做 PPT 分享时需要用到代码片段时，或者需要在网络上优雅地分享代码片段时，这一招很有用。</p>\n<p>生成的效果如下：</p>\n<p><img data-src=\"http://img.smyhvae.com/20200619_1403.png\" alt=\"\"></p>\n<p>其他同类插件： <code>CodeSnap</code> 。我们也可以通过 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYXJib24ubm93LnNoLw==\">https://carbon.now.sh/</span> 这个网站生成代码图片</p>\n<p>有人可能会说：直接用 QQ 截图不行吗？可以是可以，但不够美观、不够干净。</p>\n<h3 id=\"31-image-preview-荐\"><a class=\"markdownIt-Anchor\" href=\"#31-image-preview-荐\">#</a> 31、Image Preview 【荐】</h3>\n<p>图片预览。鼠标移动到图片 url 上的时候，会自动显示图片的预览和图片尺寸。</p>\n<h3 id=\"32-auto-close-tag-auto-rename-tag\"><a class=\"markdownIt-Anchor\" href=\"#32-auto-close-tag-auto-rename-tag\">#</a> 32、Auto Close Tag、Auto Rename Tag</h3>\n<p>自动闭合标签、自动对标签重命名。</p>\n<h3 id=\"33-better-comments\"><a class=\"markdownIt-Anchor\" href=\"#33-better-comments\">#</a> 33、Better Comments</h3>\n<p>为注释添加更醒目、带分类的色彩。</p>\n<h3 id=\"34-css-peek\"><a class=\"markdownIt-Anchor\" href=\"#34-css-peek\">#</a> 34、CSS Peek</h3>\n<p>增强 HTML 和 CSS 之间的关联，快速查看该元素上的 CSS 样式。</p>\n<h3 id=\"35-vue-css-peek\"><a class=\"markdownIt-Anchor\" href=\"#35-vue-css-peek\">#</a> 35、Vue CSS Peek</h3>\n<p>CSS Peek 对 Vue 没有支持，该插件提供了对 Vue 文件的支持。</p>\n<h3 id=\"36-color-info\"><a class=\"markdownIt-Anchor\" href=\"#36-color-info\">#</a> 36、Color Info</h3>\n<p>这个便捷的插件，将为你提供你在 CSS 中使用颜色的相关信息。你只需在颜色上悬停光标，就可以预览色块中色彩模型的（HEX、 RGB、HSL 和 CMYK）相关信息了。</p>\n<h3 id=\"37-remotehub\"><a class=\"markdownIt-Anchor\" href=\"#37-remotehub\">#</a> 37、RemoteHub</h3>\n<p>不要惊讶，RemoteHub 和 GitLens 是同一个作者开发出来的。</p>\n<p><code>RemoteHub</code>  插件的作用是：可以在本地查看 GitHub 网站上的代码，而不需要将代码下载到本地。</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_1937.png\" alt=\"\"></p>\n<p>这个插件目前使用的人还不多，赶紧安装起来尝尝鲜吧。</p>\n<h3 id=\"38-live-share实时编码分享\"><a class=\"markdownIt-Anchor\" href=\"#38-live-share实时编码分享\">#</a> 38、Live Share：实时编码分享</h3>\n<p><code>Live Share</code>  这个神奇的插件是由微软官方出品，它的作用是：<strong>实时编码分享</strong>。也就是说，它可以实现你和你的同伴一起写代码。这绝对就是<strong>结对编程</strong>的神器啊。</p>\n<p>安装方式：</p>\n<p>打开插件管理，搜索 “live share”，安装。安装后重启 VS Code，在左侧会多出一个按钮：</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_2012.png\" alt=\"\"></p>\n<p>上图中，点击红框部分，登录后就可以分享你的工作空间了。</p>\n<p><img data-src=\"http://img.smyhvae.com/20190418_2005.png\" alt=\"\"></p>\n<h3 id=\"39-import-cost\"><a class=\"markdownIt-Anchor\" href=\"#39-import-cost\">#</a> 39、Import Cost</h3>\n<p>在项目开发过程中，我们会引入很多 npm 包，有时候可能只用到了某个包里的一个方法，却引入了整个包，导致代码体积增大很多。 <code>Import Cost</code>  插件可以在代码中友好的提示我们，当前引入的包会增加多少体积，这很有助于帮我们优化代码的体积。</p>\n<h3 id=\"paste-json-as-code\"><a class=\"markdownIt-Anchor\" href=\"#paste-json-as-code\">#</a> Paste JSON as Code</h3>\n<p>此插件可以将剪贴板中的 JSON 字符串转换成工作代码。支持多种语言。</p>\n<h2 id=\"八-常见主题插件\"><a class=\"markdownIt-Anchor\" href=\"#八-常见主题插件\">#</a> 八、常见主题插件</h2>\n<p>给你的 VS Code 换个皮肤吧，免费的那种。</p>\n<ul>\n<li>\n<p>Dracula Theme</p>\n</li>\n<li>\n<p>Material Theme</p>\n</li>\n<li>\n<p>Nebula Theme</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPXpodWFuZ3RvbmdmYS5NYXRlcmlhbC10aGVtZQ==\">One Dark Pro</span></p>\n</li>\n<li>\n<p>One Monokai Theme</p>\n</li>\n<li>\n<p>Monokai Pro</p>\n</li>\n<li>\n<p>Ayu</p>\n</li>\n</ul>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPWFrYXJsc3Rlbi52c2NvZGUtc25henp5LWFrYXJsc3Rlbg==\">Snazzy Plus</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZXRwbGFjZS52aXN1YWxzdHVkaW8uY29tL2l0ZW1zP2l0ZW1OYW1lPWFsZXhhbmRlcnRlLmRhaW50eS12c2NvZGU=\">Dainty</span></p>\n</li>\n<li>\n<p><code>SynthWave '84</code></p>\n</li>\n</ul>\n<ul>\n<li>\n<p>GitHub Plus Theme：白色主题</p>\n</li>\n<li>\n<p>Horizon Theme：红色主题</p>\n</li>\n</ul>\n<h2 id=\"最后一段\"><a class=\"markdownIt-Anchor\" href=\"#最后一段\">#</a> 最后一段</h2>\n<p>如果你还有什么推荐的 VS Code 插件，欢迎留言。</p>\n<p>大家完全不用担心这篇文章会过时，随着 VS Code 的版本更新和插件更新，本文也会随之更新。关于 VS Code 内容的后续更新，你可以关注我在 GitHub 上的前端入门项目，项目地址是：</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpYW5ndXlpaGFvL1dlYg==\">https://github.com/qianguyihao/Web</span></p>\n</blockquote>\n<p>一个超级详细和真诚的前端入门项目。</p>\n<h2 id=\"todo\"><a class=\"markdownIt-Anchor\" href=\"#todo\">#</a> todo</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpYW5ndXlpaGFvL1dlYi9pc3N1ZXMvODQ=\">issues 84</span></li>\n</ul>\n<h2 id=\"参考链接\"><a class=\"markdownIt-Anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZWE0MGM2NzUxODgyNTczYjIxOTc3N2Q=\">VSCode 插件大全｜ VSCode 高级玩家之第二篇</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdXB1d29lcmMueHl6L3Rvb2xzL3ZzY29kZS9wbHVnaW5zLmh0bWw=\">http://www.supuwoerc.xyz/tools/vscode/plugins.html</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85OTQ2MjY3Mg==\">如何让 VS Code 更好用 10 倍？这里有一份 VS Code 新手指南</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9seXJlYWw2NjYuY29tLyVFOSU4MiVBMyVFNCVCQSU5QiVFNCVCRCVBMCVFNSVCQSU5NCVFOCVBRiVBNSVFOCU4MCU4MyVFOCU5OSU5MSVFNSU4RCVCOCVFOCVCRCVCRCVFNyU5QSU4NC1WU0NvZGUtJUU2JTg5JUE5JUU1JUIxJTk1LyNtb3Jl\">那些你应该考虑卸载的 VSCode 扩展</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZDc0ZWI1YzUxODgyNTI1MDE3Nzg3ZDk=\">VS Code 折腾记 - (16) 推荐一波实用的插件集</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81ZGI2NjY3MmYyNjVkYTRkMGUwMDlhYWQ=\">VSCode 前端必备插件，有可能你装了却不知道如何使用？</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC81YTA4ZDFkNmYyNjVkYTQzMGYzMTk1MGU=\">能让你开发效率翻倍的 VSCode 插件配置（上）</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxMjgxMTg4Ng==\">https://segmentfault.com/a/1190000012811886</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pZG91YmkuY2MvMjAxOS8wNy8wOC92c2NvZGUtc3VibGltZS10aGVtZS8=\">「Vscode」打造类 sublime 的高颜值编辑器</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sc3F5LnRlY2gvMjAyMC8wMy8xNC8yMDIwMDMxNE1hYy1Wc2NvZGUlRTUlQkYlQUIlRTYlOEQlQjclRTklOTQlQUUv\">Mac Vscode 快捷键</span></p>\n</li>\n</ul>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/c3JjPTExJmFtcDt0aW1lc3RhbXA9MTU5MTU4MTUzNiZhbXA7dmVyPTIzODcmYW1wO3NpZ25hdHVyZT1pNHhMWmxMZTFHa2w3T2lCSWhQTypWU2VOQjVsekZnVFktZGdOVzlFOVpidElBdjRibkoxUmRBQVpkaHZEdypjZy1EbU1jVWEtVjhOU1VkVi10dGhtWFpDcTNodDRlZEN3ZXE2djBReEtqbmg4SXVBeHl5aDVxeW1kUnVpKjhpRSZhbXA7bmV3PTE=\">使用 VSCode 的一些技巧</span></li>\n</ul>\n",
            "tags": [
                "转载",
                "前端工具"
            ]
        }
    ]
}